"use strict";

// The core of the node.js API for Z3. This file could be mostly autogenerated by Z3 scripts. Currently
// only the function bindings are, not the types.
import ref from 'ref';
import ArrayType from 'ref-array';
import ffi from 'ffi';
import config from './config';

let libPath = config.Z3_DIR;

// Manually defined types (from Z3 Python API). Could possibly be simplified to just Voidp
// but maybe we'll need the distinction later
let Void  = ref.types.void,
    Voidp = ref.refType(Void);

let Z3Exception = Voidp;
let ContextObj = Voidp;
let TheoryObj = Voidp;
let Config = Voidp;
let Symbol = Voidp;
let Sort = Voidp;
let FuncDecl = Voidp;
let Ast = Voidp;
let Pattern = Voidp;
let Model = Voidp;
let Literals = Voidp;
let Constructor = Voidp;
let ConstructorList = Voidp;
let GoalObj = Voidp;
let TacticObj = Voidp;
let ProbeObj = Voidp;
let ApplyResultObj = Voidp;
let StatsObj = Voidp;
let SolverObj = Voidp;
let FixedpointObj = Voidp;
let ModelObj = Voidp;
let AstVectorObj = Voidp;
let AstMapObj = Voidp;
let Params = Voidp;
let ParamDescrs = Voidp;
let FuncInterpObj = Voidp;
let FuncEntryObj = Voidp;
let RCFNumObj = Voidp;

// Names for standard types
let CUInt = ref.types.uint32;
let CInt = ref.types.int32;
let CBool = ref.types.bool;
let CULong = ref.types.uint64;
let CLong = ref.types.int64;
let CDouble = ref.types.double;
let CString = ref.types.CString;

// Array types. Not all of these may be valid (check over time)
let AstArray = ArrayType(Ast);
let CUIntArray = ArrayType(CUInt);
let SymbolArray = ArrayType(Symbol);
let SortArray = ArrayType(Symbol);
let FuncDeclArray = ArrayType(FuncDecl);
let ConstructorArray = ArrayType(Constructor);
let ConstructorListArray = ArrayType(ConstructorList);
let PatternArray = ArrayType(Pattern);
let TacticObjArray = ArrayType(TacticObj);
let RCFNumObjArray = ArrayType(RCFNumObj); 

var GeneratedBindings = []; 

GeneratedBindings['Z3_global_param_set'] = [ Void, [ CString, CString]];
GeneratedBindings['Z3_global_param_reset_all'] = [ Void, [ ]];
GeneratedBindings['Z3_global_param_get'] = [ CInt, [ CString, ref.refType(CString)]];
GeneratedBindings['Z3_mk_config'] = [ Config, [ ]];
GeneratedBindings['Z3_del_config'] = [ Void, [ Config]];
GeneratedBindings['Z3_set_param_value'] = [ Void, [ Config, CString, CString]];
GeneratedBindings['Z3_mk_context'] = [ ContextObj, [ Config]];
GeneratedBindings['Z3_mk_context_rc'] = [ ContextObj, [ Config]];
GeneratedBindings['Z3_del_context'] = [ Void, [ ContextObj]];
GeneratedBindings['Z3_inc_ref'] = [ Void, [ ContextObj, Ast]];
GeneratedBindings['Z3_dec_ref'] = [ Void, [ ContextObj, Ast]];
GeneratedBindings['Z3_update_param_value'] = [ Void, [ ContextObj, CString, CString]];
GeneratedBindings['Z3_interrupt'] = [ Void, [ ContextObj]];
GeneratedBindings['Z3_mk_params'] = [ Params, [ ContextObj]];
GeneratedBindings['Z3_params_inc_ref'] = [ Void, [ ContextObj, Params]];
GeneratedBindings['Z3_params_dec_ref'] = [ Void, [ ContextObj, Params]];
GeneratedBindings['Z3_params_set_bool'] = [ Void, [ ContextObj, Params, Symbol, CInt]];
GeneratedBindings['Z3_params_set_uint'] = [ Void, [ ContextObj, Params, Symbol, CUInt]];
GeneratedBindings['Z3_params_set_double'] = [ Void, [ ContextObj, Params, Symbol, CDouble]];
GeneratedBindings['Z3_params_set_symbol'] = [ Void, [ ContextObj, Params, Symbol, Symbol]];
GeneratedBindings['Z3_params_to_string'] = [ CString, [ ContextObj, Params]];
GeneratedBindings['Z3_params_validate'] = [ Void, [ ContextObj, Params, ParamDescrs]];
GeneratedBindings['Z3_param_descrs_inc_ref'] = [ Void, [ ContextObj, ParamDescrs]];
GeneratedBindings['Z3_param_descrs_dec_ref'] = [ Void, [ ContextObj, ParamDescrs]];
GeneratedBindings['Z3_param_descrs_get_kind'] = [ CUInt, [ ContextObj, ParamDescrs, Symbol]];
GeneratedBindings['Z3_param_descrs_size'] = [ CUInt, [ ContextObj, ParamDescrs]];
GeneratedBindings['Z3_param_descrs_get_name'] = [ Symbol, [ ContextObj, ParamDescrs, CUInt]];
GeneratedBindings['Z3_param_descrs_to_string'] = [ CString, [ ContextObj, ParamDescrs]];
GeneratedBindings['Z3_mk_int_symbol'] = [ Symbol, [ ContextObj, CInt]];
GeneratedBindings['Z3_mk_string_symbol'] = [ Symbol, [ ContextObj, CString]];
GeneratedBindings['Z3_mk_uninterpreted_sort'] = [ Sort, [ ContextObj, Symbol]];
GeneratedBindings['Z3_mk_bool_sort'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_int_sort'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_real_sort'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_bv_sort'] = [ Sort, [ ContextObj, CUInt]];
GeneratedBindings['Z3_mk_finite_domain_sort'] = [ Sort, [ ContextObj, Symbol, CULong]];
GeneratedBindings['Z3_mk_array_sort'] = [ Sort, [ ContextObj, Sort, Sort]];
GeneratedBindings['Z3_mk_tuple_sort'] = [ Sort, [ ContextObj, Symbol, CUInt, SymbolArray, SortArray, ref.refType(FuncDecl), FuncDeclArray]];
GeneratedBindings['Z3_mk_enumeration_sort'] = [ Sort, [ ContextObj, Symbol, CUInt, SymbolArray, FuncDeclArray, FuncDeclArray]];
GeneratedBindings['Z3_mk_list_sort'] = [ Sort, [ ContextObj, Symbol, Sort, ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl)]];
GeneratedBindings['Z3_mk_constructor'] = [ Constructor, [ ContextObj, Symbol, Symbol, CUInt, SymbolArray, SortArray, CUIntArray]];
GeneratedBindings['Z3_del_constructor'] = [ Void, [ ContextObj, Constructor]];
GeneratedBindings['Z3_mk_datatype'] = [ Sort, [ ContextObj, Symbol, CUInt, ConstructorArray]];
GeneratedBindings['Z3_mk_constructor_list'] = [ ConstructorList, [ ContextObj, CUInt, ConstructorArray]];
GeneratedBindings['Z3_del_constructor_list'] = [ Void, [ ContextObj, ConstructorList]];
GeneratedBindings['Z3_mk_datatypes'] = [ Void, [ ContextObj, CUInt, SymbolArray, SortArray, ConstructorListArray]];
GeneratedBindings['Z3_query_constructor'] = [ Void, [ ContextObj, Constructor, CUInt, ref.refType(FuncDecl), ref.refType(FuncDecl), FuncDeclArray]];
GeneratedBindings['Z3_mk_func_decl'] = [ FuncDecl, [ ContextObj, Symbol, CUInt, SortArray, Sort]];
GeneratedBindings['Z3_mk_app'] = [ Ast, [ ContextObj, FuncDecl, CUInt, AstArray]];
GeneratedBindings['Z3_mk_const'] = [ Ast, [ ContextObj, Symbol, Sort]];
GeneratedBindings['Z3_mk_fresh_func_decl'] = [ FuncDecl, [ ContextObj, CString, CUInt, SortArray, Sort]];
GeneratedBindings['Z3_mk_fresh_const'] = [ Ast, [ ContextObj, CString, Sort]];
GeneratedBindings['Z3_mk_true'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_false'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_eq'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_distinct'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_not'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_ite'] = [ Ast, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_iff'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_implies'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_xor'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_and'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_or'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_add'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_mul'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_sub'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_unary_minus'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_div'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_mod'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_rem'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_power'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_lt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_le'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_gt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_ge'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_int2real'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_real2int'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_is_int'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_bvnot'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_bvredand'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_bvredor'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_bvand'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvor'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvxor'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvnand'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvnor'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvxnor'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvneg'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_bvadd'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsub'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvmul'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvudiv'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsdiv'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvurem'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsrem'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsmod'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvult'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvslt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvule'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsle'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvuge'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsge'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvugt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsgt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_concat'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_extract'] = [ Ast, [ ContextObj, CUInt, CUInt, Ast]];
GeneratedBindings['Z3_mk_sign_ext'] = [ Ast, [ ContextObj, CUInt, Ast]];
GeneratedBindings['Z3_mk_zero_ext'] = [ Ast, [ ContextObj, CUInt, Ast]];
GeneratedBindings['Z3_mk_repeat'] = [ Ast, [ ContextObj, CUInt, Ast]];
GeneratedBindings['Z3_mk_bvshl'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvlshr'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvashr'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_rotate_left'] = [ Ast, [ ContextObj, CUInt, Ast]];
GeneratedBindings['Z3_mk_rotate_right'] = [ Ast, [ ContextObj, CUInt, Ast]];
GeneratedBindings['Z3_mk_ext_rotate_left'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_ext_rotate_right'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_int2bv'] = [ Ast, [ ContextObj, CUInt, Ast]];
GeneratedBindings['Z3_mk_bv2int'] = [ Ast, [ ContextObj, Ast, CInt]];
GeneratedBindings['Z3_mk_bvadd_no_overflow'] = [ Ast, [ ContextObj, Ast, Ast, CInt]];
GeneratedBindings['Z3_mk_bvadd_no_underflow'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsub_no_overflow'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvsub_no_underflow'] = [ Ast, [ ContextObj, Ast, Ast, CInt]];
GeneratedBindings['Z3_mk_bvsdiv_no_overflow'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_bvneg_no_overflow'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_bvmul_no_overflow'] = [ Ast, [ ContextObj, Ast, Ast, CInt]];
GeneratedBindings['Z3_mk_bvmul_no_underflow'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_select'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_store'] = [ Ast, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_const_array'] = [ Ast, [ ContextObj, Sort, Ast]];
GeneratedBindings['Z3_mk_map'] = [ Ast, [ ContextObj, FuncDecl, CUInt, AstArray]];
GeneratedBindings['Z3_mk_array_default'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_set_sort'] = [ Sort, [ ContextObj, Sort]];
GeneratedBindings['Z3_mk_empty_set'] = [ Ast, [ ContextObj, Sort]];
GeneratedBindings['Z3_mk_full_set'] = [ Ast, [ ContextObj, Sort]];
GeneratedBindings['Z3_mk_set_add'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_set_del'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_set_union'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_set_intersect'] = [ Ast, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_set_difference'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_set_complement'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_set_member'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_set_subset'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_array_ext'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_numeral'] = [ Ast, [ ContextObj, CString, Sort]];
GeneratedBindings['Z3_mk_real'] = [ Ast, [ ContextObj, CInt, CInt]];
GeneratedBindings['Z3_mk_int'] = [ Ast, [ ContextObj, CInt, Sort]];
GeneratedBindings['Z3_mk_unsigned_int'] = [ Ast, [ ContextObj, CUInt, Sort]];
GeneratedBindings['Z3_mk_int64'] = [ Ast, [ ContextObj, CLong, Sort]];
GeneratedBindings['Z3_mk_unsigned_int64'] = [ Ast, [ ContextObj, CULong, Sort]];
GeneratedBindings['Z3_mk_pattern'] = [ Pattern, [ ContextObj, CUInt, AstArray]];
GeneratedBindings['Z3_mk_bound'] = [ Ast, [ ContextObj, CUInt, Sort]];
GeneratedBindings['Z3_mk_forall'] = [ Ast, [ ContextObj, CUInt, CUInt, PatternArray, CUInt, SortArray, SymbolArray, Ast]];
GeneratedBindings['Z3_mk_exists'] = [ Ast, [ ContextObj, CUInt, CUInt, PatternArray, CUInt, SortArray, SymbolArray, Ast]];
GeneratedBindings['Z3_mk_quantifier'] = [ Ast, [ ContextObj, CInt, CUInt, CUInt, PatternArray, CUInt, SortArray, SymbolArray, Ast]];
GeneratedBindings['Z3_mk_quantifier_ex'] = [ Ast, [ ContextObj, CInt, CUInt, Symbol, Symbol, CUInt, PatternArray, CUInt, AstArray, CUInt, SortArray, SymbolArray, Ast]];
GeneratedBindings['Z3_mk_forall_const'] = [ Ast, [ ContextObj, CUInt, CUInt, AstArray, CUInt, PatternArray, Ast]];
GeneratedBindings['Z3_mk_exists_const'] = [ Ast, [ ContextObj, CUInt, CUInt, AstArray, CUInt, PatternArray, Ast]];
GeneratedBindings['Z3_mk_quantifier_const'] = [ Ast, [ ContextObj, CInt, CUInt, CUInt, AstArray, CUInt, PatternArray, Ast]];
GeneratedBindings['Z3_mk_quantifier_const_ex'] = [ Ast, [ ContextObj, CInt, CUInt, Symbol, Symbol, CUInt, AstArray, CUInt, PatternArray, CUInt, AstArray, Ast]];
GeneratedBindings['Z3_get_symbol_kind'] = [ CUInt, [ ContextObj, Symbol]];
GeneratedBindings['Z3_get_symbol_int'] = [ CInt, [ ContextObj, Symbol]];
GeneratedBindings['Z3_get_symbol_string'] = [ CString, [ ContextObj, Symbol]];
GeneratedBindings['Z3_get_sort_name'] = [ Symbol, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_sort_id'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_sort_to_ast'] = [ Ast, [ ContextObj, Sort]];
GeneratedBindings['Z3_is_eq_sort'] = [ CInt, [ ContextObj, Sort, Sort]];
GeneratedBindings['Z3_get_sort_kind'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_bv_sort_size'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_finite_domain_sort_size'] = [ CInt, [ ContextObj, Sort, ref.refType(CULong)]];
GeneratedBindings['Z3_get_array_sort_domain'] = [ Sort, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_array_sort_range'] = [ Sort, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_tuple_sort_mk_decl'] = [ FuncDecl, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_tuple_sort_num_fields'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_tuple_sort_field_decl'] = [ FuncDecl, [ ContextObj, Sort, CUInt]];
GeneratedBindings['Z3_get_datatype_sort_num_constructors'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_datatype_sort_constructor'] = [ FuncDecl, [ ContextObj, Sort, CUInt]];
GeneratedBindings['Z3_get_datatype_sort_recognizer'] = [ FuncDecl, [ ContextObj, Sort, CUInt]];
GeneratedBindings['Z3_get_datatype_sort_constructor_accessor'] = [ FuncDecl, [ ContextObj, Sort, CUInt, CUInt]];
GeneratedBindings['Z3_datatype_update_field'] = [ Ast, [ ContextObj, FuncDecl, Ast, Ast]];
GeneratedBindings['Z3_get_relation_arity'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_get_relation_column'] = [ Sort, [ ContextObj, Sort, CUInt]];
GeneratedBindings['Z3_mk_atmost'] = [ Ast, [ ContextObj, CUInt, AstArray, CUInt]];
GeneratedBindings['Z3_mk_pble'] = [ Ast, [ ContextObj, CUInt, AstArray, CIntArray, CInt]];
GeneratedBindings['Z3_func_decl_to_ast'] = [ Ast, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_is_eq_func_decl'] = [ CInt, [ ContextObj, FuncDecl, FuncDecl]];
GeneratedBindings['Z3_get_func_decl_id'] = [ CUInt, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_get_decl_name'] = [ Symbol, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_get_decl_kind'] = [ CUInt, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_get_domain_size'] = [ CUInt, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_get_arity'] = [ CUInt, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_get_domain'] = [ Sort, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_range'] = [ Sort, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_get_decl_num_parameters'] = [ CUInt, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_get_decl_parameter_kind'] = [ CUInt, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_decl_int_parameter'] = [ CInt, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_decl_double_parameter'] = [ CDouble, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_decl_symbol_parameter'] = [ Symbol, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_decl_sort_parameter'] = [ Sort, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_decl_ast_parameter'] = [ Ast, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_decl_func_decl_parameter'] = [ FuncDecl, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_get_decl_rational_parameter'] = [ CString, [ ContextObj, FuncDecl, CUInt]];
GeneratedBindings['Z3_app_to_ast'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_app_decl'] = [ FuncDecl, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_app_num_args'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_app_arg'] = [ Ast, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_is_eq_ast'] = [ CInt, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_get_ast_id'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_ast_hash'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_sort'] = [ Sort, [ ContextObj, Ast]];
GeneratedBindings['Z3_is_well_sorted'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_bool_value'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_ast_kind'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_is_app'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_is_numeral_ast'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_is_algebraic_number'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_to_app'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_to_func_decl'] = [ FuncDecl, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_numeral_string'] = [ CString, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_numeral_decimal_string'] = [ CString, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_get_numerator'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_denominator'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_numeral_small'] = [ CInt, [ ContextObj, Ast, ref.refType(CLong), ref.refType(CLong)]];
GeneratedBindings['Z3_get_numeral_int'] = [ CInt, [ ContextObj, Ast, ref.refType(CInt)]];
GeneratedBindings['Z3_get_numeral_uint'] = [ CInt, [ ContextObj, Ast, ref.refType(CUInt)]];
GeneratedBindings['Z3_get_numeral_uint64'] = [ CInt, [ ContextObj, Ast, ref.refType(CULong)]];
GeneratedBindings['Z3_get_numeral_int64'] = [ CInt, [ ContextObj, Ast, ref.refType(CLong)]];
GeneratedBindings['Z3_get_numeral_rational_int64'] = [ CInt, [ ContextObj, Ast, ref.refType(CLong), ref.refType(CLong)]];
GeneratedBindings['Z3_get_algebraic_number_lower'] = [ Ast, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_get_algebraic_number_upper'] = [ Ast, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_pattern_to_ast'] = [ Ast, [ ContextObj, Pattern]];
GeneratedBindings['Z3_get_pattern_num_terms'] = [ CUInt, [ ContextObj, Pattern]];
GeneratedBindings['Z3_get_pattern'] = [ Ast, [ ContextObj, Pattern, CUInt]];
GeneratedBindings['Z3_get_index_value'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_is_quantifier_forall'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_quantifier_weight'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_quantifier_num_patterns'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_quantifier_pattern_ast'] = [ Pattern, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_get_quantifier_num_no_patterns'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_quantifier_no_pattern_ast'] = [ Ast, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_get_quantifier_num_bound'] = [ CUInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_quantifier_bound_name'] = [ Symbol, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_get_quantifier_bound_sort'] = [ Sort, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_get_quantifier_body'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_simplify'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_simplify_ex'] = [ Ast, [ ContextObj, Ast, Params]];
GeneratedBindings['Z3_simplify_get_help'] = [ CString, [ ContextObj]];
GeneratedBindings['Z3_simplify_get_param_descrs'] = [ ParamDescrs, [ ContextObj]];
GeneratedBindings['Z3_update_term'] = [ Ast, [ ContextObj, Ast, CUInt, AstArray]];
GeneratedBindings['Z3_substitute'] = [ Ast, [ ContextObj, Ast, CUInt, AstArray, AstArray]];
GeneratedBindings['Z3_substitute_vars'] = [ Ast, [ ContextObj, Ast, CUInt, AstArray]];
GeneratedBindings['Z3_translate'] = [ Ast, [ ContextObj, Ast, ContextObj]];
GeneratedBindings['Z3_model_inc_ref'] = [ Void, [ ContextObj, Model]];
GeneratedBindings['Z3_model_dec_ref'] = [ Void, [ ContextObj, Model]];
GeneratedBindings['Z3_model_eval'] = [ CInt, [ ContextObj, Model, Ast, CInt, ref.refType(Ast)]];
GeneratedBindings['Z3_model_get_const_interp'] = [ Ast, [ ContextObj, Model, FuncDecl]];
GeneratedBindings['Z3_model_has_interp'] = [ CInt, [ ContextObj, Model, FuncDecl]];
GeneratedBindings['Z3_model_get_func_interp'] = [ FuncInterpObj, [ ContextObj, Model, FuncDecl]];
GeneratedBindings['Z3_model_get_num_consts'] = [ CUInt, [ ContextObj, Model]];
GeneratedBindings['Z3_model_get_const_decl'] = [ FuncDecl, [ ContextObj, Model, CUInt]];
GeneratedBindings['Z3_model_get_num_funcs'] = [ CUInt, [ ContextObj, Model]];
GeneratedBindings['Z3_model_get_func_decl'] = [ FuncDecl, [ ContextObj, Model, CUInt]];
GeneratedBindings['Z3_model_get_num_sorts'] = [ CUInt, [ ContextObj, Model]];
GeneratedBindings['Z3_model_get_sort'] = [ Sort, [ ContextObj, Model, CUInt]];
GeneratedBindings['Z3_model_get_sort_universe'] = [ AstVectorObj, [ ContextObj, Model, Sort]];
GeneratedBindings['Z3_is_as_array'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_get_as_array_func_decl'] = [ FuncDecl, [ ContextObj, Ast]];
GeneratedBindings['Z3_func_interp_inc_ref'] = [ Void, [ ContextObj, FuncInterpObj]];
GeneratedBindings['Z3_func_interp_dec_ref'] = [ Void, [ ContextObj, FuncInterpObj]];
GeneratedBindings['Z3_func_interp_get_num_entries'] = [ CUInt, [ ContextObj, FuncInterpObj]];
GeneratedBindings['Z3_func_interp_get_entry'] = [ FuncEntryObj, [ ContextObj, FuncInterpObj, CUInt]];
GeneratedBindings['Z3_func_interp_get_else'] = [ Ast, [ ContextObj, FuncInterpObj]];
GeneratedBindings['Z3_func_interp_get_arity'] = [ CUInt, [ ContextObj, FuncInterpObj]];
GeneratedBindings['Z3_func_entry_inc_ref'] = [ Void, [ ContextObj, FuncEntryObj]];
GeneratedBindings['Z3_func_entry_dec_ref'] = [ Void, [ ContextObj, FuncEntryObj]];
GeneratedBindings['Z3_func_entry_get_value'] = [ Ast, [ ContextObj, FuncEntryObj]];
GeneratedBindings['Z3_func_entry_get_num_args'] = [ CUInt, [ ContextObj, FuncEntryObj]];
GeneratedBindings['Z3_func_entry_get_arg'] = [ Ast, [ ContextObj, FuncEntryObj, CUInt]];
GeneratedBindings['Z3_open_log'] = [ CInt, [ CString]];
GeneratedBindings['Z3_append_log'] = [ Void, [ CString]];
GeneratedBindings['Z3_close_log'] = [ Void, [ ]];
GeneratedBindings['Z3_toggle_warning_messages'] = [ Void, [ CInt]];
GeneratedBindings['Z3_set_ast_print_mode'] = [ Void, [ ContextObj, CUInt]];
GeneratedBindings['Z3_ast_to_string'] = [ CString, [ ContextObj, Ast]];
GeneratedBindings['Z3_pattern_to_string'] = [ CString, [ ContextObj, Pattern]];
GeneratedBindings['Z3_sort_to_string'] = [ CString, [ ContextObj, Sort]];
GeneratedBindings['Z3_func_decl_to_string'] = [ CString, [ ContextObj, FuncDecl]];
GeneratedBindings['Z3_model_to_string'] = [ CString, [ ContextObj, Model]];
GeneratedBindings['Z3_benchmark_to_smtlib_string'] = [ CString, [ ContextObj, CString, CString, CString, CString, CUInt, AstArray, Ast]];
GeneratedBindings['Z3_parse_smtlib2_string'] = [ Ast, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]];
GeneratedBindings['Z3_parse_smtlib2_file'] = [ Ast, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]];
GeneratedBindings['Z3_parse_smtlib_string'] = [ Void, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]];
GeneratedBindings['Z3_parse_smtlib_file'] = [ Void, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]];
GeneratedBindings['Z3_get_smtlib_num_formulas'] = [ CUInt, [ ContextObj]];
GeneratedBindings['Z3_get_smtlib_formula'] = [ Ast, [ ContextObj, CUInt]];
GeneratedBindings['Z3_get_smtlib_num_assumptions'] = [ CUInt, [ ContextObj]];
GeneratedBindings['Z3_get_smtlib_assumption'] = [ Ast, [ ContextObj, CUInt]];
GeneratedBindings['Z3_get_smtlib_num_decls'] = [ CUInt, [ ContextObj]];
GeneratedBindings['Z3_get_smtlib_decl'] = [ FuncDecl, [ ContextObj, CUInt]];
GeneratedBindings['Z3_get_smtlib_num_sorts'] = [ CUInt, [ ContextObj]];
GeneratedBindings['Z3_get_smtlib_sort'] = [ Sort, [ ContextObj, CUInt]];
GeneratedBindings['Z3_get_smtlib_error'] = [ CString, [ ContextObj]];
GeneratedBindings['Z3_get_error_code'] = [ CUInt, [ ContextObj]];
GeneratedBindings['Z3_set_error'] = [ Void, [ ContextObj, CUInt]];
GeneratedBindings['Z3_get_error_msg'] = [ CString, [ ContextObj, CUInt]];
GeneratedBindings['Z3_get_version'] = [ Void, [ ref.refType(CUInt), ref.refType(CUInt), ref.refType(CUInt), ref.refType(CUInt)]];
GeneratedBindings['Z3_enable_trace'] = [ Void, [ CString]];
GeneratedBindings['Z3_disable_trace'] = [ Void, [ CString]];
GeneratedBindings['Z3_reset_memory'] = [ Void, [ ]];
GeneratedBindings['Z3_finalize_memory'] = [ Void, [ ]];
GeneratedBindings['Z3_mk_goal'] = [ GoalObj, [ ContextObj, CInt, CInt, CInt]];
GeneratedBindings['Z3_goal_inc_ref'] = [ Void, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_dec_ref'] = [ Void, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_precision'] = [ CUInt, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_assert'] = [ Void, [ ContextObj, GoalObj, Ast]];
GeneratedBindings['Z3_goal_inconsistent'] = [ CInt, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_depth'] = [ CUInt, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_reset'] = [ Void, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_size'] = [ CUInt, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_formula'] = [ Ast, [ ContextObj, GoalObj, CUInt]];
GeneratedBindings['Z3_goal_num_exprs'] = [ CUInt, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_is_decided_sat'] = [ CInt, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_is_decided_unsat'] = [ CInt, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_goal_translate'] = [ GoalObj, [ ContextObj, GoalObj, ContextObj]];
GeneratedBindings['Z3_goal_to_string'] = [ CString, [ ContextObj, GoalObj]];
GeneratedBindings['Z3_mk_tactic'] = [ TacticObj, [ ContextObj, CString]];
GeneratedBindings['Z3_tactic_inc_ref'] = [ Void, [ ContextObj, TacticObj]];
GeneratedBindings['Z3_tactic_dec_ref'] = [ Void, [ ContextObj, TacticObj]];
GeneratedBindings['Z3_mk_probe'] = [ ProbeObj, [ ContextObj, CString]];
GeneratedBindings['Z3_probe_inc_ref'] = [ Void, [ ContextObj, ProbeObj]];
GeneratedBindings['Z3_probe_dec_ref'] = [ Void, [ ContextObj, ProbeObj]];
GeneratedBindings['Z3_tactic_and_then'] = [ TacticObj, [ ContextObj, TacticObj, TacticObj]];
GeneratedBindings['Z3_tactic_or_else'] = [ TacticObj, [ ContextObj, TacticObj, TacticObj]];
GeneratedBindings['Z3_tactic_par_or'] = [ TacticObj, [ ContextObj, CUInt, TacticObjArray]];
GeneratedBindings['Z3_tactic_par_and_then'] = [ TacticObj, [ ContextObj, TacticObj, TacticObj]];
GeneratedBindings['Z3_tactic_try_for'] = [ TacticObj, [ ContextObj, TacticObj, CUInt]];
GeneratedBindings['Z3_tactic_when'] = [ TacticObj, [ ContextObj, ProbeObj, TacticObj]];
GeneratedBindings['Z3_tactic_cond'] = [ TacticObj, [ ContextObj, ProbeObj, TacticObj, TacticObj]];
GeneratedBindings['Z3_tactic_repeat'] = [ TacticObj, [ ContextObj, TacticObj, CUInt]];
GeneratedBindings['Z3_tactic_skip'] = [ TacticObj, [ ContextObj]];
GeneratedBindings['Z3_tactic_fail'] = [ TacticObj, [ ContextObj]];
GeneratedBindings['Z3_tactic_fail_if'] = [ TacticObj, [ ContextObj, ProbeObj]];
GeneratedBindings['Z3_tactic_fail_if_not_decided'] = [ TacticObj, [ ContextObj]];
GeneratedBindings['Z3_tactic_using_params'] = [ TacticObj, [ ContextObj, TacticObj, Params]];
GeneratedBindings['Z3_probe_const'] = [ ProbeObj, [ ContextObj, CDouble]];
GeneratedBindings['Z3_probe_lt'] = [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]];
GeneratedBindings['Z3_probe_gt'] = [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]];
GeneratedBindings['Z3_probe_le'] = [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]];
GeneratedBindings['Z3_probe_ge'] = [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]];
GeneratedBindings['Z3_probe_eq'] = [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]];
GeneratedBindings['Z3_probe_and'] = [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]];
GeneratedBindings['Z3_probe_or'] = [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]];
GeneratedBindings['Z3_probe_not'] = [ ProbeObj, [ ContextObj, ProbeObj]];
GeneratedBindings['Z3_get_num_tactics'] = [ CUInt, [ ContextObj]];
GeneratedBindings['Z3_get_tactic_name'] = [ CString, [ ContextObj, CUInt]];
GeneratedBindings['Z3_get_num_probes'] = [ CUInt, [ ContextObj]];
GeneratedBindings['Z3_get_probe_name'] = [ CString, [ ContextObj, CUInt]];
GeneratedBindings['Z3_tactic_get_help'] = [ CString, [ ContextObj, TacticObj]];
GeneratedBindings['Z3_tactic_get_param_descrs'] = [ ParamDescrs, [ ContextObj, TacticObj]];
GeneratedBindings['Z3_tactic_get_descr'] = [ CString, [ ContextObj, CString]];
GeneratedBindings['Z3_probe_get_descr'] = [ CString, [ ContextObj, CString]];
GeneratedBindings['Z3_probe_apply'] = [ CDouble, [ ContextObj, ProbeObj, GoalObj]];
GeneratedBindings['Z3_tactic_apply'] = [ ApplyResultObj, [ ContextObj, TacticObj, GoalObj]];
GeneratedBindings['Z3_tactic_apply_ex'] = [ ApplyResultObj, [ ContextObj, TacticObj, GoalObj, Params]];
GeneratedBindings['Z3_apply_result_inc_ref'] = [ Void, [ ContextObj, ApplyResultObj]];
GeneratedBindings['Z3_apply_result_dec_ref'] = [ Void, [ ContextObj, ApplyResultObj]];
GeneratedBindings['Z3_apply_result_to_string'] = [ CString, [ ContextObj, ApplyResultObj]];
GeneratedBindings['Z3_apply_result_get_num_subgoals'] = [ CUInt, [ ContextObj, ApplyResultObj]];
GeneratedBindings['Z3_apply_result_get_subgoal'] = [ GoalObj, [ ContextObj, ApplyResultObj, CUInt]];
GeneratedBindings['Z3_apply_result_convert_model'] = [ Model, [ ContextObj, ApplyResultObj, CUInt, Model]];
GeneratedBindings['Z3_mk_solver'] = [ SolverObj, [ ContextObj]];
GeneratedBindings['Z3_mk_simple_solver'] = [ SolverObj, [ ContextObj]];
GeneratedBindings['Z3_mk_solver_for_logic'] = [ SolverObj, [ ContextObj, Symbol]];
GeneratedBindings['Z3_mk_solver_from_tactic'] = [ SolverObj, [ ContextObj, TacticObj]];
GeneratedBindings['Z3_solver_translate'] = [ SolverObj, [ ContextObj, SolverObj, ContextObj]];
GeneratedBindings['Z3_solver_get_help'] = [ CString, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_get_param_descrs'] = [ ParamDescrs, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_set_params'] = [ Void, [ ContextObj, SolverObj, Params]];
GeneratedBindings['Z3_solver_inc_ref'] = [ Void, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_dec_ref'] = [ Void, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_push'] = [ Void, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_pop'] = [ Void, [ ContextObj, SolverObj, CUInt]];
GeneratedBindings['Z3_solver_reset'] = [ Void, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_get_num_scopes'] = [ CUInt, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_assert'] = [ Void, [ ContextObj, SolverObj, Ast]];
GeneratedBindings['Z3_solver_assert_and_track'] = [ Void, [ ContextObj, SolverObj, Ast, Ast]];
GeneratedBindings['Z3_solver_get_assertions'] = [ AstVectorObj, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_check'] = [ CInt, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_check_assumptions'] = [ CInt, [ ContextObj, SolverObj, CUInt, AstArray]];
GeneratedBindings['Z3_get_implied_equalities'] = [ CInt, [ ContextObj, SolverObj, CUInt, AstArray, CUIntArray]];
GeneratedBindings['Z3_solver_get_model'] = [ Model, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_get_proof'] = [ Ast, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_get_unsat_core'] = [ AstVectorObj, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_get_reason_unknown'] = [ CString, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_get_statistics'] = [ StatsObj, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_solver_to_string'] = [ CString, [ ContextObj, SolverObj]];
GeneratedBindings['Z3_stats_to_string'] = [ CString, [ ContextObj, StatsObj]];
GeneratedBindings['Z3_stats_inc_ref'] = [ Void, [ ContextObj, StatsObj]];
GeneratedBindings['Z3_stats_dec_ref'] = [ Void, [ ContextObj, StatsObj]];
GeneratedBindings['Z3_stats_size'] = [ CUInt, [ ContextObj, StatsObj]];
GeneratedBindings['Z3_stats_get_key'] = [ CString, [ ContextObj, StatsObj, CUInt]];
GeneratedBindings['Z3_stats_is_uint'] = [ CInt, [ ContextObj, StatsObj, CUInt]];
GeneratedBindings['Z3_stats_is_double'] = [ CInt, [ ContextObj, StatsObj, CUInt]];
GeneratedBindings['Z3_stats_get_uint_value'] = [ CUInt, [ ContextObj, StatsObj, CUInt]];
GeneratedBindings['Z3_stats_get_double_value'] = [ CDouble, [ ContextObj, StatsObj, CUInt]];
GeneratedBindings['Z3_mk_ast_vector'] = [ AstVectorObj, [ ContextObj]];
GeneratedBindings['Z3_ast_vector_inc_ref'] = [ Void, [ ContextObj, AstVectorObj]];
GeneratedBindings['Z3_ast_vector_dec_ref'] = [ Void, [ ContextObj, AstVectorObj]];
GeneratedBindings['Z3_ast_vector_size'] = [ CUInt, [ ContextObj, AstVectorObj]];
GeneratedBindings['Z3_ast_vector_get'] = [ Ast, [ ContextObj, AstVectorObj, CUInt]];
GeneratedBindings['Z3_ast_vector_set'] = [ Void, [ ContextObj, AstVectorObj, CUInt, Ast]];
GeneratedBindings['Z3_ast_vector_resize'] = [ Void, [ ContextObj, AstVectorObj, CUInt]];
GeneratedBindings['Z3_ast_vector_push'] = [ Void, [ ContextObj, AstVectorObj, Ast]];
GeneratedBindings['Z3_ast_vector_translate'] = [ AstVectorObj, [ ContextObj, AstVectorObj, ContextObj]];
GeneratedBindings['Z3_ast_vector_to_string'] = [ CString, [ ContextObj, AstVectorObj]];
GeneratedBindings['Z3_mk_ast_map'] = [ AstMapObj, [ ContextObj]];
GeneratedBindings['Z3_ast_map_inc_ref'] = [ Void, [ ContextObj, AstMapObj]];
GeneratedBindings['Z3_ast_map_dec_ref'] = [ Void, [ ContextObj, AstMapObj]];
GeneratedBindings['Z3_ast_map_contains'] = [ CInt, [ ContextObj, AstMapObj, Ast]];
GeneratedBindings['Z3_ast_map_find'] = [ Ast, [ ContextObj, AstMapObj, Ast]];
GeneratedBindings['Z3_ast_map_insert'] = [ Void, [ ContextObj, AstMapObj, Ast, Ast]];
GeneratedBindings['Z3_ast_map_erase'] = [ Void, [ ContextObj, AstMapObj, Ast]];
GeneratedBindings['Z3_ast_map_reset'] = [ Void, [ ContextObj, AstMapObj]];
GeneratedBindings['Z3_ast_map_size'] = [ CUInt, [ ContextObj, AstMapObj]];
GeneratedBindings['Z3_ast_map_keys'] = [ AstVectorObj, [ ContextObj, AstMapObj]];
GeneratedBindings['Z3_ast_map_to_string'] = [ CString, [ ContextObj, AstMapObj]];
GeneratedBindings['Z3_algebraic_is_value'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_algebraic_is_pos'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_algebraic_is_neg'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_algebraic_is_zero'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_algebraic_sign'] = [ CInt, [ ContextObj, Ast]];
GeneratedBindings['Z3_algebraic_add'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_sub'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_mul'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_div'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_root'] = [ Ast, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_algebraic_power'] = [ Ast, [ ContextObj, Ast, CUInt]];
GeneratedBindings['Z3_algebraic_lt'] = [ CInt, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_gt'] = [ CInt, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_le'] = [ CInt, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_ge'] = [ CInt, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_eq'] = [ CInt, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_neq'] = [ CInt, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_algebraic_roots'] = [ AstVectorObj, [ ContextObj, Ast, CUInt, AstArray]];
GeneratedBindings['Z3_algebraic_eval'] = [ CInt, [ ContextObj, Ast, CUInt, AstArray]];
GeneratedBindings['Z3_polynomial_subresultants'] = [ AstVectorObj, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_rcf_del'] = [ Void, [ ContextObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_mk_rational'] = [ RCFNumObj, [ ContextObj, CString]];
GeneratedBindings['Z3_rcf_mk_small_int'] = [ RCFNumObj, [ ContextObj, CInt]];
GeneratedBindings['Z3_rcf_mk_pi'] = [ RCFNumObj, [ ContextObj]];
GeneratedBindings['Z3_rcf_mk_e'] = [ RCFNumObj, [ ContextObj]];
GeneratedBindings['Z3_rcf_mk_infinitesimal'] = [ RCFNumObj, [ ContextObj]];
GeneratedBindings['Z3_rcf_mk_roots'] = [ CUInt, [ ContextObj, CUInt, RCFNumObjArray, RCFNumObjArray]];
GeneratedBindings['Z3_rcf_add'] = [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_sub'] = [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_mul'] = [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_div'] = [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_neg'] = [ RCFNumObj, [ ContextObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_inv'] = [ RCFNumObj, [ ContextObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_power'] = [ RCFNumObj, [ ContextObj, RCFNumObj, CUInt]];
GeneratedBindings['Z3_rcf_lt'] = [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_gt'] = [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_le'] = [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_ge'] = [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_eq'] = [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_neq'] = [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]];
GeneratedBindings['Z3_rcf_num_to_string'] = [ CString, [ ContextObj, RCFNumObj, CInt, CInt]];
GeneratedBindings['Z3_rcf_num_to_decimal_string'] = [ CString, [ ContextObj, RCFNumObj, CUInt]];
GeneratedBindings['Z3_rcf_get_numerator_denominator'] = [ Void, [ ContextObj, RCFNumObj, ref.refType(RCFNumObj), ref.refType(RCFNumObj)]];
GeneratedBindings['Z3_mk_fixedpoint'] = [ FixedpointObj, [ ContextObj]];
GeneratedBindings['Z3_fixedpoint_inc_ref'] = [ Void, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_dec_ref'] = [ Void, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_add_rule'] = [ Void, [ ContextObj, FixedpointObj, Ast, Symbol]];
GeneratedBindings['Z3_fixedpoint_add_fact'] = [ Void, [ ContextObj, FixedpointObj, FuncDecl, CUInt, CUIntArray]];
GeneratedBindings['Z3_fixedpoint_assert'] = [ Void, [ ContextObj, FixedpointObj, Ast]];
GeneratedBindings['Z3_fixedpoint_query'] = [ CInt, [ ContextObj, FixedpointObj, Ast]];
GeneratedBindings['Z3_fixedpoint_query_relations'] = [ CInt, [ ContextObj, FixedpointObj, CUInt, FuncDeclArray]];
GeneratedBindings['Z3_fixedpoint_get_answer'] = [ Ast, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_get_reason_unknown'] = [ CString, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_update_rule'] = [ Void, [ ContextObj, FixedpointObj, Ast, Symbol]];
GeneratedBindings['Z3_fixedpoint_get_num_levels'] = [ CUInt, [ ContextObj, FixedpointObj, FuncDecl]];
GeneratedBindings['Z3_fixedpoint_get_cover_delta'] = [ Ast, [ ContextObj, FixedpointObj, CInt, FuncDecl]];
GeneratedBindings['Z3_fixedpoint_add_cover'] = [ Void, [ ContextObj, FixedpointObj, CInt, FuncDecl, Ast]];
GeneratedBindings['Z3_fixedpoint_get_statistics'] = [ StatsObj, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_register_relation'] = [ Void, [ ContextObj, FixedpointObj, FuncDecl]];
GeneratedBindings['Z3_fixedpoint_set_predicate_representation'] = [ Void, [ ContextObj, FixedpointObj, FuncDecl, CUInt, SymbolArray]];
GeneratedBindings['Z3_fixedpoint_get_rules'] = [ AstVectorObj, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_get_assertions'] = [ AstVectorObj, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_set_params'] = [ Void, [ ContextObj, FixedpointObj, Params]];
GeneratedBindings['Z3_fixedpoint_get_help'] = [ CString, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_get_param_descrs'] = [ ParamDescrs, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_to_string'] = [ CString, [ ContextObj, FixedpointObj, CUInt, AstArray]];
GeneratedBindings['Z3_fixedpoint_from_string'] = [ AstVectorObj, [ ContextObj, FixedpointObj, CString]];
GeneratedBindings['Z3_fixedpoint_from_file'] = [ AstVectorObj, [ ContextObj, FixedpointObj, CString]];
GeneratedBindings['Z3_fixedpoint_push'] = [ Void, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_fixedpoint_pop'] = [ Void, [ ContextObj, FixedpointObj]];
GeneratedBindings['Z3_mk_optimize'] = [ OptimizeObj, [ ContextObj]];
GeneratedBindings['Z3_optimize_inc_ref'] = [ Void, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_dec_ref'] = [ Void, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_assert'] = [ Void, [ ContextObj, OptimizeObj, Ast]];
GeneratedBindings['Z3_optimize_assert_soft'] = [ CUInt, [ ContextObj, OptimizeObj, Ast, CString, Symbol]];
GeneratedBindings['Z3_optimize_maximize'] = [ CUInt, [ ContextObj, OptimizeObj, Ast]];
GeneratedBindings['Z3_optimize_minimize'] = [ CUInt, [ ContextObj, OptimizeObj, Ast]];
GeneratedBindings['Z3_optimize_push'] = [ Void, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_pop'] = [ Void, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_check'] = [ CInt, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_get_reason_unknown'] = [ CString, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_get_model'] = [ Model, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_set_params'] = [ Void, [ ContextObj, OptimizeObj, Params]];
GeneratedBindings['Z3_optimize_get_param_descrs'] = [ ParamDescrs, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_get_lower'] = [ Ast, [ ContextObj, OptimizeObj, CUInt]];
GeneratedBindings['Z3_optimize_get_upper'] = [ Ast, [ ContextObj, OptimizeObj, CUInt]];
GeneratedBindings['Z3_optimize_to_string'] = [ CString, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_get_help'] = [ CString, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_optimize_get_statistics'] = [ StatsObj, [ ContextObj, OptimizeObj]];
GeneratedBindings['Z3_mk_interpolant'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_interpolation_context'] = [ ContextObj, [ Config]];
GeneratedBindings['Z3_get_interpolant'] = [ AstVectorObj, [ ContextObj, Ast, Ast, Params]];
GeneratedBindings['Z3_compute_interpolant'] = [ CInt, [ ContextObj, Ast, Params, ref.refType(AstVectorObj), ref.refType(Model)]];
GeneratedBindings['Z3_interpolation_profile'] = [ CString, [ ContextObj]];
GeneratedBindings['Z3_read_interpolation_problem'] = [ CInt, [ ContextObj, ref.refType(CUInt), Ast, CUInt, CString, ref.refType(CString), ref.refType(CUInt), Ast]];
GeneratedBindings['Z3_check_interpolant'] = [ CInt, [ ContextObj, CUInt, AstArray, CUIntArray, AstArray, ref.refType(CString), CUInt, AstArray]];
GeneratedBindings['Z3_write_interpolation_problem'] = [ Void, [ ContextObj, CUInt, AstArray, CUIntArray, CString, CUInt, AstArray]];
GeneratedBindings['Z3_mk_fpa_rounding_mode_sort'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_round_nearest_ties_to_even'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_rne'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_round_nearest_ties_to_away'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_rna'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_round_toward_positive'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_rtp'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_round_toward_negative'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_rtn'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_round_toward_zero'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_rtz'] = [ Ast, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort'] = [ Sort, [ ContextObj, CUInt, CUInt]];
GeneratedBindings['Z3_mk_fpa_sort_half'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort_16'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort_single'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort_32'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort_double'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort_64'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort_quadruple'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_sort_128'] = [ Sort, [ ContextObj]];
GeneratedBindings['Z3_mk_fpa_nan'] = [ Ast, [ ContextObj, Sort]];
GeneratedBindings['Z3_mk_fpa_inf'] = [ Ast, [ ContextObj, Sort, CInt]];
GeneratedBindings['Z3_mk_fpa_zero'] = [ Ast, [ ContextObj, Sort, CInt]];
GeneratedBindings['Z3_mk_fpa_fp'] = [ Ast, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_numeral_float'] = [ Ast, [ ContextObj, CFloat, Sort]];
GeneratedBindings['Z3_mk_fpa_numeral_double'] = [ Ast, [ ContextObj, CDouble, Sort]];
GeneratedBindings['Z3_mk_fpa_numeral_int'] = [ Ast, [ ContextObj, CInt, Sort]];
GeneratedBindings['Z3_mk_fpa_numeral_int_uint'] = [ Ast, [ ContextObj, CInt, CInt, CUInt, Sort]];
GeneratedBindings['Z3_mk_fpa_numeral_int64_uint64'] = [ Ast, [ ContextObj, CInt, CLong, CULong, Sort]];
GeneratedBindings['Z3_mk_fpa_abs'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_neg'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_add'] = [ Ast, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_sub'] = [ Ast, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_mul'] = [ Ast, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_div'] = [ Ast, [ ContextObj, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_fma'] = [ Ast, [ ContextObj, Ast, Ast, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_sqrt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_rem'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_round_to_integral'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_min'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_max'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_leq'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_lt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_geq'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_gt'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_eq'] = [ Ast, [ ContextObj, Ast, Ast]];
GeneratedBindings['Z3_mk_fpa_is_normal'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_is_subnormal'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_is_zero'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_is_infinite'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_is_nan'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_is_negative'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_is_positive'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_to_fp_bv'] = [ Ast, [ ContextObj, Ast, Sort]];
GeneratedBindings['Z3_mk_fpa_to_fp_float'] = [ Ast, [ ContextObj, Ast, Ast, Sort]];
GeneratedBindings['Z3_mk_fpa_to_fp_real'] = [ Ast, [ ContextObj, Ast, Ast, Sort]];
GeneratedBindings['Z3_mk_fpa_to_fp_signed'] = [ Ast, [ ContextObj, Ast, Ast, Sort]];
GeneratedBindings['Z3_mk_fpa_to_fp_unsigned'] = [ Ast, [ ContextObj, Ast, Ast, Sort]];
GeneratedBindings['Z3_mk_fpa_to_ubv'] = [ Ast, [ ContextObj, Ast, Ast, CUInt]];
GeneratedBindings['Z3_mk_fpa_to_sbv'] = [ Ast, [ ContextObj, Ast, Ast, CUInt]];
GeneratedBindings['Z3_mk_fpa_to_real'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_fpa_get_ebits'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_fpa_get_sbits'] = [ CUInt, [ ContextObj, Sort]];
GeneratedBindings['Z3_fpa_get_numeral_sign'] = [ CInt, [ ContextObj, Ast, ref.refType(CInt)]];
GeneratedBindings['Z3_fpa_get_numeral_significand_string'] = [ CString, [ ContextObj, Ast]];
GeneratedBindings['Z3_fpa_get_numeral_significand_uint64'] = [ CInt, [ ContextObj, Ast, ref.refType(CULong)]];
GeneratedBindings['Z3_fpa_get_numeral_exponent_string'] = [ CString, [ ContextObj, Ast]];
GeneratedBindings['Z3_fpa_get_numeral_exponent_int64'] = [ CInt, [ ContextObj, Ast, ref.refType(CLong)]];
GeneratedBindings['Z3_mk_fpa_to_ieee_bv'] = [ Ast, [ ContextObj, Ast]];
GeneratedBindings['Z3_mk_fpa_to_fp_int_real'] = [ Ast, [ ContextObj, Ast, Ast, Ast, Sort]];  
let Z3 = ffi.Library(libPath, GeneratedBindings);

//////// End Z3 function definitions

// Constants - these are taken from z3onsts.py (and reformatted for export)

// enum Z3_lbool
Z3.TRUE = 1;
Z3.UNDEF = 0;
Z3.FALSE = -1;

// enum Z3_symbol_kind
Z3.INT_SYMBOL = 0;
Z3.STRING_SYMBOL = 1;

// enum Z3_parameter_kind
Z3.PARAMETER_FUNC_DECL = 6;
Z3.PARAMETER_DOUBLE = 1;
Z3.PARAMETER_SYMBOL = 3;
Z3.PARAMETER_INT = 0;
Z3.PARAMETER_AST = 5;
Z3.PARAMETER_SORT = 4;
Z3.PARAMETER_RATIONAL = 2;

// enum Z3_sort_kind
Z3.BV_SORT = 4;
Z3.FINITE_DOMAIN_SORT = 8;
Z3.ARRAY_SORT = 5;
Z3.UNKNOWN_SORT = 1000;
Z3.RELATION_SORT = 7;
Z3.REAL_SORT = 3;
Z3.INT_SORT = 2;
Z3.UNINTERPRETED_SORT = 0;
Z3.BOOL_SORT = 1;
Z3.DATATYPE_SORT = 6;

// enum  Z3_ast_kind
Z3.CONST_STR = 0;
Z3.CONST_BOOL = 1;
Z3.FUNC = 2;
Z3.NUMERAL = 3;
Z3.letIABLE = 4;
Z3.STR_VARIABLE = 5;
Z3.INT_VARIABLE = 6;
Z3.QUANTIFIER = 7;
Z3.UNKNOWN_TYPE = 8;
Z3.STAR_TYPE = 9;
Z3.CONCAT_TYPE = 10;
Z3.SEARCH_TYPE = 11;
Z3.REPLACE_ALL = 12;
Z3.SUBSTRING = 13;

// enum  Z3_ast_kind
Z3.VAR_AST = 2;
Z3.SORT_AST = 4;
Z3.QUANTIFIER_AST = 3;
Z3.UNKNOWN_AST = 1000;
Z3.FUNC_DECL_AST = 5;
Z3.NUMERAL_AST = 0;
Z3.APP_AST = 1;

// enum Z3_decl_kind
Z3.OP_LABEL = 1792;
Z3.OP_PR_REWRITE = 1294;
Z3.OP_UNINTERPRETED = 2051;
Z3.OP_SUB = 519;
Z3.OP_ZERO_EXT = 1058;
Z3.OP_ADD = 518;
Z3.OP_IS_INT = 528;
Z3.OP_BREDOR = 1061;
Z3.OP_BNOT = 1051;
Z3.OP_BNOR = 1054;
Z3.OP_PR_CNF_STAR = 1315;
Z3.OP_RA_JOIN = 1539;
Z3.OP_LE = 514;
Z3.OP_SET_UNION = 773;
Z3.OP_PR_UNDEF = 1280;
Z3.OP_BREDAND = 1062;
Z3.OP_LT = 516;
Z3.OP_RA_UNION = 1540;
Z3.OP_BADD = 1028;
Z3.OP_BUREM0 = 1039;
Z3.OP_OEQ = 267;
Z3.OP_PR_MODUS_PONENS = 1284;
Z3.OP_RA_CLONE = 1548;
Z3.OP_REPEAT = 1060;
Z3.OP_RA_NEGATION_FILTER = 1544;
Z3.OP_BSMOD0 = 1040;
Z3.OP_BLSHR = 1065;
Z3.OP_BASHR = 1066;
Z3.OP_PR_UNIT_RESOLUTION = 1304;
Z3.OP_ROTATE_RIGHT = 1068;
Z3.OP_ARRAY_DEFAULT = 772;
Z3.OP_PR_PULL_QUANT = 1296;
Z3.OP_PR_APPLY_DEF = 1310;
Z3.OP_PR_REWRITE_STAR = 1295;
Z3.OP_IDIV = 523;
Z3.OP_PR_GOAL = 1283;
Z3.OP_PR_IFF_TRUE = 1305;
Z3.OP_LABEL_LIT = 1793;
Z3.OP_BOR = 1050;
Z3.OP_PR_SYMMETRY = 1286;
Z3.OP_TRUE = 256;
Z3.OP_SET_COMPLEMENT = 776;
Z3.OP_CONCAT = 1056;
Z3.OP_PR_NOT_OR_ELIM = 1293;
Z3.OP_IFF = 263;
Z3.OP_BSHL = 1064;
Z3.OP_PR_TRANSITIVITY = 1287;
Z3.OP_SGT = 1048;
Z3.OP_RA_WIDEN = 1541;
Z3.OP_PR_DEF_INTRO = 1309;
Z3.OP_NOT = 265;
Z3.OP_PR_QUANT_INTRO = 1290;
Z3.OP_UGT = 1047;
Z3.OP_DT_RECOGNISER = 2049;
Z3.OP_SET_INTERSECT = 774;
Z3.OP_BSREM = 1033;
Z3.OP_RA_STORE = 1536;
Z3.OP_SLT = 1046;
Z3.OP_ROTATE_LEFT = 1067;
Z3.OP_PR_NNF_NEG = 1313;
Z3.OP_PR_REFLEXIVITY = 1285;
Z3.OP_ULEQ = 1041;
Z3.OP_BIT1 = 1025;
Z3.OP_BIT0 = 1026;
Z3.OP_EQ = 258;
Z3.OP_BMUL = 1030;
Z3.OP_ARRAY_MAP = 771;
Z3.OP_STORE = 768;
Z3.OP_PR_HYPOTHESIS = 1302;
Z3.OP_RA_RENAME = 1545;
Z3.OP_AND = 261;
Z3.OP_TO_REAL = 526;
Z3.OP_PR_NNF_POS = 1312;
Z3.OP_PR_AND_ELIM = 1292;
Z3.OP_MOD = 525;
Z3.OP_BUDIV0 = 1037;
Z3.OP_PR_TRUE = 1281;
Z3.OP_BNAND = 1053;
Z3.OP_PR_ELIM_UNUSED_VARS = 1299;
Z3.OP_RA_FILTER = 1543;
Z3.OP_FD_LT = 1549;
Z3.OP_RA_EMPTY = 1537;
Z3.OP_DIV = 522;
Z3.OP_ANUM = 512;
Z3.OP_MUL = 521;
Z3.OP_UGEQ = 1043;
Z3.OP_BSREM0 = 1038;
Z3.OP_PR_TH_LEMMA = 1318;
Z3.OP_BXOR = 1052;
Z3.OP_DISTINCT = 259;
Z3.OP_PR_IFF_FALSE = 1306;
Z3.OP_BV2INT = 1072;
Z3.OP_EXT_ROTATE_LEFT = 1069;
Z3.OP_PR_PULL_QUANT_STAR = 1297;
Z3.OP_BSUB = 1029;
Z3.OP_PR_ASSERTED = 1282;
Z3.OP_BXNOR = 1055;
Z3.OP_EXTRACT = 1059;
Z3.OP_PR_DER = 1300;
Z3.OP_DT_CONSTRUCTOR = 2048;
Z3.OP_GT = 517;
Z3.OP_BUREM = 1034;
Z3.OP_IMPLIES = 266;
Z3.OP_SLEQ = 1042;
Z3.OP_GE = 515;
Z3.OP_BAND = 1049;
Z3.OP_ITE = 260;
Z3.OP_AS_ARRAY = 778;
Z3.OP_RA_SELECT = 1547;
Z3.OP_CONST_ARRAY = 770;
Z3.OP_BSDIV = 1031;
Z3.OP_OR = 262;
Z3.OP_PR_HYPER_RESOLVE = 1319;
Z3.OP_AGNUM = 513;
Z3.OP_PR_PUSH_QUANT = 1298;
Z3.OP_BSMOD = 1035;
Z3.OP_PR_IFF_OEQ = 1311;
Z3.OP_INTERP = 268;
Z3.OP_PR_LEMMA = 1303;
Z3.OP_SET_SUBSET = 777;
Z3.OP_SELECT = 769;
Z3.OP_RA_PROJECT = 1542;
Z3.OP_BNEG = 1027;
Z3.OP_UMINUS = 520;
Z3.OP_REM = 524;
Z3.OP_TO_INT = 527;
Z3.OP_PR_QUANT_INST = 1301;
Z3.OP_SGEQ = 1044;
Z3.OP_POWER = 529;
Z3.OP_XOR3 = 1074;
Z3.OP_RA_IS_EMPTY = 1538;
Z3.OP_CARRY = 1073;
Z3.OP_DT_ACCESSOR = 2050;
Z3.OP_PR_TRANSITIVITY_STAR = 1288;
Z3.OP_PR_NNF_STAR = 1314;
Z3.OP_PR_COMMUTATIVITY = 1307;
Z3.OP_ULT = 1045;
Z3.OP_BSDIV0 = 1036;
Z3.OP_SET_DIFFERENCE = 775;
Z3.OP_INT2BV = 1071;
Z3.OP_XOR = 264;
Z3.OP_PR_MODUS_PONENS_OEQ = 1317;
Z3.OP_BNUM = 1024;
Z3.OP_BUDIV = 1032;
Z3.OP_PR_MONOTONICITY = 1289;
Z3.OP_PR_DEF_AXIOM = 1308;
Z3.OP_FALSE = 257;
Z3.OP_EXT_ROTATE_RIGHT = 1070;
Z3.OP_PR_DISTRIBUTIVITY = 1291;
Z3.OP_SIGN_EXT = 1057;
Z3.OP_PR_SKOLEMIZE = 1316;
Z3.OP_BCOMP = 1063;
Z3.OP_RA_COMPLEMENT = 1546;

// enum Z3_param_kind
Z3.PK_BOOL = 1;
Z3.PK_SYMBOL = 3;
Z3.PK_OTHER = 5;
Z3.PK_INVALID = 6;
Z3.PK_UINT = 0;
Z3.PK_STRING = 4;
Z3.PK_DOUBLE = 2;

// enum Z3_search_failure
Z3.QUANTIFIERS = 7;
Z3.UNKNOWN = 1;
Z3.CANCELED = 4;
Z3.MEMOUT_WATERMARK = 3;
Z3.THEORY = 6;
Z3.NO_FAILURE = 0;
Z3.TIMEOUT = 2;
Z3.NUM_CONFLICTS = 5;

// enum Z3_ast_print_mode
Z3.PRINT_SMTLIB2_COMPLIANT = 3;
Z3.PRINT_SMTLIB_COMPLIANT = 2;
Z3.PRINT_SMTLIB_FULL = 0;
Z3.PRINT_LOW_LEVEL = 1;

// enum Z3_error_code
Z3.INVALID_PATTERN = 6;
Z3.MEMOUT_FAIL = 7;
Z3.NO_PARSER = 5;
Z3.OK = 0;
Z3.INVALID_ARG = 3;
Z3.EXCEPTION = 12;
Z3.IOB = 2;
Z3.INTERNAL_FATAL = 9;
Z3.INVALID_USAGE = 10;
Z3.FILE_ACCESS_ERROR = 8;
Z3.SORT_ERROR = 1;
Z3.PARSER_ERROR = 4;
Z3.DEC_REF_ERROR = 11;

// enum Z3_goal_prec;
Z3.GOAL_UNDER = 1;
Z3.GOAL_PRECISE = 0;
Z3.GOAL_UNDER_OVER = 3;
Z3.GOAL_OVER = 2;

/////// end constants

//// Exported types
Z3.Ast = Ast;

Z3.AstArray = AstArray;
Z3.CUIntArray = CUIntArray;
Z3.SymbolArray = SymbolArray
Z3.SortArray = SortArray;
Z3.FuncDeclArray = FuncDeclArray;
Z3.ConstructorArray = ConstructorArray;
Z3.ConstructorListArray = ConstructorListArray;
Z3.PatternArray = PatternArray;
Z3.TacticObjArray = TacticObjArray;
Z3.RCFNumObjArray = RCFNumObjArray;

export default Z3;
