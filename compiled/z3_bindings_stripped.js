      'Z3_global_param_set': [ Void, [ CString, CString]],
      'Z3_global_param_reset_all': [ Void, [ ]],
      'Z3_global_param_get': [ CInt, [ CString, ref.refType(CString)]],
      'Z3_mk_config': [ Config, [ ]],
      'Z3_del_config': [ Void, [ Config]],
      'Z3_set_param_value': [ Void, [ Config, CString, CString]],
      'Z3_mk_context': [ ContextObj, [ Config]],
      'Z3_mk_context_rc': [ ContextObj, [ Config]],
      'Z3_del_context': [ Void, [ ContextObj]],
      'Z3_inc_ref': [ Void, [ ContextObj, Ast]],
      'Z3_dec_ref': [ Void, [ ContextObj, Ast]],
      'Z3_update_param_value': [ Void, [ ContextObj, CString, CString]],
      'Z3_interrupt': [ Void, [ ContextObj]],
      'Z3_mk_params': [ Params, [ ContextObj]],
      'Z3_params_inc_ref': [ Void, [ ContextObj, Params]],
      'Z3_params_dec_ref': [ Void, [ ContextObj, Params]],
      'Z3_params_set_bool': [ Void, [ ContextObj, Params, Symbol, CInt]],
      'Z3_params_set_uint': [ Void, [ ContextObj, Params, Symbol, CUInt]],
      'Z3_params_set_double': [ Void, [ ContextObj, Params, Symbol, CDouble]],
      'Z3_params_set_symbol': [ Void, [ ContextObj, Params, Symbol, Symbol]],
      'Z3_params_to_string': [ CString, [ ContextObj, Params]],
      'Z3_params_validate': [ Void, [ ContextObj, Params, ParamDescrs]],
      'Z3_param_descrs_inc_ref': [ Void, [ ContextObj, ParamDescrs]],
      'Z3_param_descrs_dec_ref': [ Void, [ ContextObj, ParamDescrs]],
      'Z3_param_descrs_get_kind': [ CUInt, [ ContextObj, ParamDescrs, Symbol]],
      'Z3_param_descrs_size': [ CUInt, [ ContextObj, ParamDescrs]],
      'Z3_param_descrs_get_name': [ Symbol, [ ContextObj, ParamDescrs, CUInt]],
      'Z3_param_descrs_to_string': [ CString, [ ContextObj, ParamDescrs]],
      'Z3_mk_int_symbol': [ Symbol, [ ContextObj, CInt]],
      'Z3_mk_string_symbol': [ Symbol, [ ContextObj, CString]],
      'Z3_mk_uninterpreted_sort': [ Sort, [ ContextObj, Symbol]],
      'Z3_mk_bool_sort': [ Sort, [ ContextObj]],
      'Z3_mk_int_sort': [ Sort, [ ContextObj]],
      'Z3_mk_real_sort': [ Sort, [ ContextObj]],
      'Z3_mk_bv_sort': [ Sort, [ ContextObj, CUInt]],
      'Z3_mk_finite_domain_sort': [ Sort, [ ContextObj, Symbol, CULong]],
      'Z3_mk_array_sort': [ Sort, [ ContextObj, Sort, Sort]],
      'Z3_mk_tuple_sort': [ Sort, [ ContextObj, Symbol, CUInt, SymbolArray, SortArray, ref.refType(FuncDecl), FuncDeclArray]],
      'Z3_mk_enumeration_sort': [ Sort, [ ContextObj, Symbol, CUInt, SymbolArray, FuncDeclArray, FuncDeclArray]],
      'Z3_mk_list_sort': [ Sort, [ ContextObj, Symbol, Sort, ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl), ref.refType(FuncDecl)]],
      'Z3_mk_constructor': [ Constructor, [ ContextObj, Symbol, Symbol, CUInt, SymbolArray, SortArray, CUIntArray]],
      'Z3_del_constructor': [ Void, [ ContextObj, Constructor]],
      'Z3_mk_datatype': [ Sort, [ ContextObj, Symbol, CUInt, ConstructorArray]],
      'Z3_mk_constructor_list': [ ConstructorList, [ ContextObj, CUInt, ConstructorArray]],
      'Z3_del_constructor_list': [ Void, [ ContextObj, ConstructorList]],
      'Z3_mk_datatypes': [ Void, [ ContextObj, CUInt, SymbolArray, SortArray, ConstructorListArray]],
      'Z3_query_constructor': [ Void, [ ContextObj, Constructor, CUInt, ref.refType(FuncDecl), ref.refType(FuncDecl), FuncDeclArray]],
      'Z3_mk_func_decl': [ FuncDecl, [ ContextObj, Symbol, CUInt, SortArray, Sort]],
      'Z3_mk_app': [ Ast, [ ContextObj, FuncDecl, CUInt, AstArray]],
      'Z3_mk_const': [ Ast, [ ContextObj, Symbol, Sort]],
      'Z3_mk_fresh_func_decl': [ FuncDecl, [ ContextObj, CString, CUInt, SortArray, Sort]],
      'Z3_mk_fresh_const': [ Ast, [ ContextObj, CString, Sort]],
      'Z3_mk_true': [ Ast, [ ContextObj]],
      'Z3_mk_false': [ Ast, [ ContextObj]],
      'Z3_mk_eq': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_distinct': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_not': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_ite': [ Ast, [ ContextObj, Ast, Ast, Ast]],
      'Z3_mk_iff': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_implies': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_xor': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_and': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_or': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_add': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_mul': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_sub': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_unary_minus': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_div': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_mod': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_rem': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_power': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_lt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_le': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_gt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_ge': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_int2real': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_real2int': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_is_int': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_bvnot': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_bvredand': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_bvredor': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_bvand': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvor': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvxor': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvnand': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvnor': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvxnor': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvneg': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_bvadd': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsub': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvmul': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvudiv': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsdiv': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvurem': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsrem': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsmod': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvult': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvslt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvule': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsle': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvuge': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsge': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvugt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsgt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_concat': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_extract': [ Ast, [ ContextObj, CUInt, CUInt, Ast]],
      'Z3_mk_sign_ext': [ Ast, [ ContextObj, CUInt, Ast]],
      'Z3_mk_zero_ext': [ Ast, [ ContextObj, CUInt, Ast]],
      'Z3_mk_repeat': [ Ast, [ ContextObj, CUInt, Ast]],
      'Z3_mk_bvshl': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvlshr': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvashr': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_rotate_left': [ Ast, [ ContextObj, CUInt, Ast]],
      'Z3_mk_rotate_right': [ Ast, [ ContextObj, CUInt, Ast]],
      'Z3_mk_ext_rotate_left': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_ext_rotate_right': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_int2bv': [ Ast, [ ContextObj, CUInt, Ast]],
      'Z3_mk_bv2int': [ Ast, [ ContextObj, Ast, CInt]],
      'Z3_mk_bvadd_no_overflow': [ Ast, [ ContextObj, Ast, Ast, CInt]],
      'Z3_mk_bvadd_no_underflow': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsub_no_overflow': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvsub_no_underflow': [ Ast, [ ContextObj, Ast, Ast, CInt]],
      'Z3_mk_bvsdiv_no_overflow': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_bvneg_no_overflow': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_bvmul_no_overflow': [ Ast, [ ContextObj, Ast, Ast, CInt]],
      'Z3_mk_bvmul_no_underflow': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_select': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_store': [ Ast, [ ContextObj, Ast, Ast, Ast]],
      'Z3_mk_const_array': [ Ast, [ ContextObj, Sort, Ast]],
      'Z3_mk_map': [ Ast, [ ContextObj, FuncDecl, CUInt, AstArray]],
      'Z3_mk_array_default': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_set_sort': [ Sort, [ ContextObj, Sort]],
      'Z3_mk_empty_set': [ Ast, [ ContextObj, Sort]],
      'Z3_mk_full_set': [ Ast, [ ContextObj, Sort]],
      'Z3_mk_set_add': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_set_del': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_set_union': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_set_intersect': [ Ast, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_set_difference': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_set_complement': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_set_member': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_set_subset': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_array_ext': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_numeral': [ Ast, [ ContextObj, CString, Sort]],
      'Z3_mk_real': [ Ast, [ ContextObj, CInt, CInt]],
      'Z3_mk_int': [ Ast, [ ContextObj, CInt, Sort]],
      'Z3_mk_unsigned_int': [ Ast, [ ContextObj, CUInt, Sort]],
      'Z3_mk_int64': [ Ast, [ ContextObj, CLong, Sort]],
      'Z3_mk_unsigned_int64': [ Ast, [ ContextObj, CULong, Sort]],
      'Z3_mk_pattern': [ Pattern, [ ContextObj, CUInt, AstArray]],
      'Z3_mk_bound': [ Ast, [ ContextObj, CUInt, Sort]],
      'Z3_mk_forall': [ Ast, [ ContextObj, CUInt, CUInt, PatternArray, CUInt, SortArray, SymbolArray, Ast]],
      'Z3_mk_exists': [ Ast, [ ContextObj, CUInt, CUInt, PatternArray, CUInt, SortArray, SymbolArray, Ast]],
      'Z3_mk_quantifier': [ Ast, [ ContextObj, CInt, CUInt, CUInt, PatternArray, CUInt, SortArray, SymbolArray, Ast]],
      'Z3_mk_quantifier_ex': [ Ast, [ ContextObj, CInt, CUInt, Symbol, Symbol, CUInt, PatternArray, CUInt, AstArray, CUInt, SortArray, SymbolArray, Ast]],
      'Z3_mk_forall_const': [ Ast, [ ContextObj, CUInt, CUInt, AstArray, CUInt, PatternArray, Ast]],
      'Z3_mk_exists_const': [ Ast, [ ContextObj, CUInt, CUInt, AstArray, CUInt, PatternArray, Ast]],
      'Z3_mk_quantifier_const': [ Ast, [ ContextObj, CInt, CUInt, CUInt, AstArray, CUInt, PatternArray, Ast]],
      'Z3_mk_quantifier_const_ex': [ Ast, [ ContextObj, CInt, CUInt, Symbol, Symbol, CUInt, AstArray, CUInt, PatternArray, CUInt, AstArray, Ast]],
      'Z3_get_symbol_kind': [ CUInt, [ ContextObj, Symbol]],
      'Z3_get_symbol_int': [ CInt, [ ContextObj, Symbol]],
      'Z3_get_symbol_string': [ CString, [ ContextObj, Symbol]],
      'Z3_get_sort_name': [ Symbol, [ ContextObj, Sort]],
      'Z3_get_sort_id': [ CUInt, [ ContextObj, Sort]],
      'Z3_sort_to_ast': [ Ast, [ ContextObj, Sort]],
      'Z3_is_eq_sort': [ CInt, [ ContextObj, Sort, Sort]],
      'Z3_get_sort_kind': [ CUInt, [ ContextObj, Sort]],
      'Z3_get_bv_sort_size': [ CUInt, [ ContextObj, Sort]],
      'Z3_get_finite_domain_sort_size': [ CInt, [ ContextObj, Sort, ref.refType(CULong)]],
      'Z3_get_array_sort_domain': [ Sort, [ ContextObj, Sort]],
      'Z3_get_array_sort_range': [ Sort, [ ContextObj, Sort]],
      'Z3_get_tuple_sort_mk_decl': [ FuncDecl, [ ContextObj, Sort]],
      'Z3_get_tuple_sort_num_fields': [ CUInt, [ ContextObj, Sort]],
      'Z3_get_tuple_sort_field_decl': [ FuncDecl, [ ContextObj, Sort, CUInt]],
      'Z3_get_datatype_sort_num_constructors': [ CUInt, [ ContextObj, Sort]],
      'Z3_get_datatype_sort_constructor': [ FuncDecl, [ ContextObj, Sort, CUInt]],
      'Z3_get_datatype_sort_recognizer': [ FuncDecl, [ ContextObj, Sort, CUInt]],
      'Z3_get_datatype_sort_constructor_accessor': [ FuncDecl, [ ContextObj, Sort, CUInt, CUInt]],
      'Z3_datatype_update_field': [ Ast, [ ContextObj, FuncDecl, Ast, Ast]],
      'Z3_get_relation_arity': [ CUInt, [ ContextObj, Sort]],
      'Z3_get_relation_column': [ Sort, [ ContextObj, Sort, CUInt]],
      'Z3_mk_atmost': [ Ast, [ ContextObj, CUInt, AstArray, CUInt]],
      'Z3_mk_pble': [ Ast, [ ContextObj, CUInt, AstArray, CIntArray, CInt]],
      'Z3_func_decl_to_ast': [ Ast, [ ContextObj, FuncDecl]],
      'Z3_is_eq_func_decl': [ CInt, [ ContextObj, FuncDecl, FuncDecl]],
      'Z3_get_func_decl_id': [ CUInt, [ ContextObj, FuncDecl]],
      'Z3_get_decl_name': [ Symbol, [ ContextObj, FuncDecl]],
      'Z3_get_decl_kind': [ CUInt, [ ContextObj, FuncDecl]],
      'Z3_get_domain_size': [ CUInt, [ ContextObj, FuncDecl]],
      'Z3_get_arity': [ CUInt, [ ContextObj, FuncDecl]],
      'Z3_get_domain': [ Sort, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_range': [ Sort, [ ContextObj, FuncDecl]],
      'Z3_get_decl_num_parameters': [ CUInt, [ ContextObj, FuncDecl]],
      'Z3_get_decl_parameter_kind': [ CUInt, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_decl_int_parameter': [ CInt, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_decl_double_parameter': [ CDouble, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_decl_symbol_parameter': [ Symbol, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_decl_sort_parameter': [ Sort, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_decl_ast_parameter': [ Ast, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_decl_func_decl_parameter': [ FuncDecl, [ ContextObj, FuncDecl, CUInt]],
      'Z3_get_decl_rational_parameter': [ CString, [ ContextObj, FuncDecl, CUInt]],
      'Z3_app_to_ast': [ Ast, [ ContextObj, Ast]],
      'Z3_get_app_decl': [ FuncDecl, [ ContextObj, Ast]],
      'Z3_get_app_num_args': [ CUInt, [ ContextObj, Ast]],
      'Z3_get_app_arg': [ Ast, [ ContextObj, Ast, CUInt]],
      'Z3_is_eq_ast': [ CInt, [ ContextObj, Ast, Ast]],
      'Z3_get_ast_id': [ CUInt, [ ContextObj, Ast]],
      'Z3_get_ast_hash': [ CUInt, [ ContextObj, Ast]],
      'Z3_get_sort': [ Sort, [ ContextObj, Ast]],
      'Z3_is_well_sorted': [ CInt, [ ContextObj, Ast]],
      'Z3_get_bool_value': [ CInt, [ ContextObj, Ast]],
      'Z3_get_ast_kind': [ CUInt, [ ContextObj, Ast]],
      'Z3_is_app': [ CInt, [ ContextObj, Ast]],
      'Z3_is_numeral_ast': [ CInt, [ ContextObj, Ast]],
      'Z3_is_algebraic_number': [ CInt, [ ContextObj, Ast]],
      'Z3_to_app': [ Ast, [ ContextObj, Ast]],
      'Z3_to_func_decl': [ FuncDecl, [ ContextObj, Ast]],
      'Z3_get_numeral_string': [ CString, [ ContextObj, Ast]],
      'Z3_get_numeral_decimal_string': [ CString, [ ContextObj, Ast, CUInt]],
      'Z3_get_numerator': [ Ast, [ ContextObj, Ast]],
      'Z3_get_denominator': [ Ast, [ ContextObj, Ast]],
      'Z3_get_numeral_small': [ CInt, [ ContextObj, Ast, ref.refType(CLong), ref.refType(CLong)]],
      'Z3_get_numeral_int': [ CInt, [ ContextObj, Ast, ref.refType(CInt)]],
      'Z3_get_numeral_uint': [ CInt, [ ContextObj, Ast, ref.refType(CUInt)]],
      'Z3_get_numeral_uint64': [ CInt, [ ContextObj, Ast, ref.refType(CULong)]],
      'Z3_get_numeral_int64': [ CInt, [ ContextObj, Ast, ref.refType(CLong)]],
      'Z3_get_numeral_rational_int64': [ CInt, [ ContextObj, Ast, ref.refType(CLong), ref.refType(CLong)]],
      'Z3_get_algebraic_number_lower': [ Ast, [ ContextObj, Ast, CUInt]],
      'Z3_get_algebraic_number_upper': [ Ast, [ ContextObj, Ast, CUInt]],
      'Z3_pattern_to_ast': [ Ast, [ ContextObj, Pattern]],
      'Z3_get_pattern_num_terms': [ CUInt, [ ContextObj, Pattern]],
      'Z3_get_pattern': [ Ast, [ ContextObj, Pattern, CUInt]],
      'Z3_get_index_value': [ CUInt, [ ContextObj, Ast]],
      'Z3_is_quantifier_forall': [ CInt, [ ContextObj, Ast]],
      'Z3_get_quantifier_weight': [ CUInt, [ ContextObj, Ast]],
      'Z3_get_quantifier_num_patterns': [ CUInt, [ ContextObj, Ast]],
      'Z3_get_quantifier_pattern_ast': [ Pattern, [ ContextObj, Ast, CUInt]],
      'Z3_get_quantifier_num_no_patterns': [ CUInt, [ ContextObj, Ast]],
      'Z3_get_quantifier_no_pattern_ast': [ Ast, [ ContextObj, Ast, CUInt]],
      'Z3_get_quantifier_num_bound': [ CUInt, [ ContextObj, Ast]],
      'Z3_get_quantifier_bound_name': [ Symbol, [ ContextObj, Ast, CUInt]],
      'Z3_get_quantifier_bound_sort': [ Sort, [ ContextObj, Ast, CUInt]],
      'Z3_get_quantifier_body': [ Ast, [ ContextObj, Ast]],
      'Z3_simplify': [ Ast, [ ContextObj, Ast]],
      'Z3_simplify_ex': [ Ast, [ ContextObj, Ast, Params]],
      'Z3_simplify_get_help': [ CString, [ ContextObj]],
      'Z3_simplify_get_param_descrs': [ ParamDescrs, [ ContextObj]],
      'Z3_update_term': [ Ast, [ ContextObj, Ast, CUInt, AstArray]],
      'Z3_substitute': [ Ast, [ ContextObj, Ast, CUInt, AstArray, AstArray]],
      'Z3_substitute_vars': [ Ast, [ ContextObj, Ast, CUInt, AstArray]],
      'Z3_translate': [ Ast, [ ContextObj, Ast, ContextObj]],
      'Z3_model_inc_ref': [ Void, [ ContextObj, Model]],
      'Z3_model_dec_ref': [ Void, [ ContextObj, Model]],
      'Z3_model_eval': [ CInt, [ ContextObj, Model, Ast, CInt, ref.refType(Ast)]],
      'Z3_model_get_const_interp': [ Ast, [ ContextObj, Model, FuncDecl]],
      'Z3_model_has_interp': [ CInt, [ ContextObj, Model, FuncDecl]],
      'Z3_model_get_func_interp': [ FuncInterpObj, [ ContextObj, Model, FuncDecl]],
      'Z3_model_get_num_consts': [ CUInt, [ ContextObj, Model]],
      'Z3_model_get_const_decl': [ FuncDecl, [ ContextObj, Model, CUInt]],
      'Z3_model_get_num_funcs': [ CUInt, [ ContextObj, Model]],
      'Z3_model_get_func_decl': [ FuncDecl, [ ContextObj, Model, CUInt]],
      'Z3_model_get_num_sorts': [ CUInt, [ ContextObj, Model]],
      'Z3_model_get_sort': [ Sort, [ ContextObj, Model, CUInt]],
      'Z3_model_get_sort_universe': [ AstVectorObj, [ ContextObj, Model, Sort]],
      'Z3_is_as_array': [ CInt, [ ContextObj, Ast]],
      'Z3_get_as_array_func_decl': [ FuncDecl, [ ContextObj, Ast]],
      'Z3_func_interp_inc_ref': [ Void, [ ContextObj, FuncInterpObj]],
      'Z3_func_interp_dec_ref': [ Void, [ ContextObj, FuncInterpObj]],
      'Z3_func_interp_get_num_entries': [ CUInt, [ ContextObj, FuncInterpObj]],
      'Z3_func_interp_get_entry': [ FuncEntryObj, [ ContextObj, FuncInterpObj, CUInt]],
      'Z3_func_interp_get_else': [ Ast, [ ContextObj, FuncInterpObj]],
      'Z3_func_interp_get_arity': [ CUInt, [ ContextObj, FuncInterpObj]],
      'Z3_func_entry_inc_ref': [ Void, [ ContextObj, FuncEntryObj]],
      'Z3_func_entry_dec_ref': [ Void, [ ContextObj, FuncEntryObj]],
      'Z3_func_entry_get_value': [ Ast, [ ContextObj, FuncEntryObj]],
      'Z3_func_entry_get_num_args': [ CUInt, [ ContextObj, FuncEntryObj]],
      'Z3_func_entry_get_arg': [ Ast, [ ContextObj, FuncEntryObj, CUInt]],
      'Z3_open_log': [ CInt, [ CString]],
      'Z3_append_log': [ Void, [ CString]],
      'Z3_close_log': [ Void, [ ]],
      'Z3_toggle_warning_messages': [ Void, [ CInt]],
      'Z3_set_ast_print_mode': [ Void, [ ContextObj, CUInt]],
      'Z3_ast_to_string': [ CString, [ ContextObj, Ast]],
      'Z3_pattern_to_string': [ CString, [ ContextObj, Pattern]],
      'Z3_sort_to_string': [ CString, [ ContextObj, Sort]],
      'Z3_func_decl_to_string': [ CString, [ ContextObj, FuncDecl]],
      'Z3_model_to_string': [ CString, [ ContextObj, Model]],
      'Z3_benchmark_to_smtlib_string': [ CString, [ ContextObj, CString, CString, CString, CString, CUInt, AstArray, Ast]],
      'Z3_parse_smtlib2_string': [ Ast, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]],
      'Z3_parse_smtlib2_file': [ Ast, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]],
      'Z3_parse_smtlib_string': [ Void, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]],
      'Z3_parse_smtlib_file': [ Void, [ ContextObj, CString, CUInt, SymbolArray, SortArray, CUInt, SymbolArray, FuncDeclArray]],
      'Z3_get_smtlib_num_formulas': [ CUInt, [ ContextObj]],
      'Z3_get_smtlib_formula': [ Ast, [ ContextObj, CUInt]],
      'Z3_get_smtlib_num_assumptions': [ CUInt, [ ContextObj]],
      'Z3_get_smtlib_assumption': [ Ast, [ ContextObj, CUInt]],
      'Z3_get_smtlib_num_decls': [ CUInt, [ ContextObj]],
      'Z3_get_smtlib_decl': [ FuncDecl, [ ContextObj, CUInt]],
      'Z3_get_smtlib_num_sorts': [ CUInt, [ ContextObj]],
      'Z3_get_smtlib_sort': [ Sort, [ ContextObj, CUInt]],
      'Z3_get_smtlib_error': [ CString, [ ContextObj]],
      'Z3_get_error_code': [ CUInt, [ ContextObj]],
      'Z3_set_error': [ Void, [ ContextObj, CUInt]],
      'Z3_get_error_msg': [ CString, [ ContextObj, CUInt]],
      'Z3_get_version': [ Void, [ ref.refType(CUInt), ref.refType(CUInt), ref.refType(CUInt), ref.refType(CUInt)]],
      'Z3_enable_trace': [ Void, [ CString]],
      'Z3_disable_trace': [ Void, [ CString]],
      'Z3_reset_memory': [ Void, [ ]],
      'Z3_finalize_memory': [ Void, [ ]],
      'Z3_mk_goal': [ GoalObj, [ ContextObj, CInt, CInt, CInt]],
      'Z3_goal_inc_ref': [ Void, [ ContextObj, GoalObj]],
      'Z3_goal_dec_ref': [ Void, [ ContextObj, GoalObj]],
      'Z3_goal_precision': [ CUInt, [ ContextObj, GoalObj]],
      'Z3_goal_assert': [ Void, [ ContextObj, GoalObj, Ast]],
      'Z3_goal_inconsistent': [ CInt, [ ContextObj, GoalObj]],
      'Z3_goal_depth': [ CUInt, [ ContextObj, GoalObj]],
      'Z3_goal_reset': [ Void, [ ContextObj, GoalObj]],
      'Z3_goal_size': [ CUInt, [ ContextObj, GoalObj]],
      'Z3_goal_formula': [ Ast, [ ContextObj, GoalObj, CUInt]],
      'Z3_goal_num_exprs': [ CUInt, [ ContextObj, GoalObj]],
      'Z3_goal_is_decided_sat': [ CInt, [ ContextObj, GoalObj]],
      'Z3_goal_is_decided_unsat': [ CInt, [ ContextObj, GoalObj]],
      'Z3_goal_translate': [ GoalObj, [ ContextObj, GoalObj, ContextObj]],
      'Z3_goal_to_string': [ CString, [ ContextObj, GoalObj]],
      'Z3_mk_tactic': [ TacticObj, [ ContextObj, CString]],
      'Z3_tactic_inc_ref': [ Void, [ ContextObj, TacticObj]],
      'Z3_tactic_dec_ref': [ Void, [ ContextObj, TacticObj]],
      'Z3_mk_probe': [ ProbeObj, [ ContextObj, CString]],
      'Z3_probe_inc_ref': [ Void, [ ContextObj, ProbeObj]],
      'Z3_probe_dec_ref': [ Void, [ ContextObj, ProbeObj]],
      'Z3_tactic_and_then': [ TacticObj, [ ContextObj, TacticObj, TacticObj]],
      'Z3_tactic_or_else': [ TacticObj, [ ContextObj, TacticObj, TacticObj]],
      'Z3_tactic_par_or': [ TacticObj, [ ContextObj, CUInt, TacticObjArray]],
      'Z3_tactic_par_and_then': [ TacticObj, [ ContextObj, TacticObj, TacticObj]],
      'Z3_tactic_try_for': [ TacticObj, [ ContextObj, TacticObj, CUInt]],
      'Z3_tactic_when': [ TacticObj, [ ContextObj, ProbeObj, TacticObj]],
      'Z3_tactic_cond': [ TacticObj, [ ContextObj, ProbeObj, TacticObj, TacticObj]],
      'Z3_tactic_repeat': [ TacticObj, [ ContextObj, TacticObj, CUInt]],
      'Z3_tactic_skip': [ TacticObj, [ ContextObj]],
      'Z3_tactic_fail': [ TacticObj, [ ContextObj]],
      'Z3_tactic_fail_if': [ TacticObj, [ ContextObj, ProbeObj]],
      'Z3_tactic_fail_if_not_decided': [ TacticObj, [ ContextObj]],
      'Z3_tactic_using_params': [ TacticObj, [ ContextObj, TacticObj, Params]],
      'Z3_probe_const': [ ProbeObj, [ ContextObj, CDouble]],
      'Z3_probe_lt': [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]],
      'Z3_probe_gt': [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]],
      'Z3_probe_le': [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]],
      'Z3_probe_ge': [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]],
      'Z3_probe_eq': [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]],
      'Z3_probe_and': [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]],
      'Z3_probe_or': [ ProbeObj, [ ContextObj, ProbeObj, ProbeObj]],
      'Z3_probe_not': [ ProbeObj, [ ContextObj, ProbeObj]],
      'Z3_get_num_tactics': [ CUInt, [ ContextObj]],
      'Z3_get_tactic_name': [ CString, [ ContextObj, CUInt]],
      'Z3_get_num_probes': [ CUInt, [ ContextObj]],
      'Z3_get_probe_name': [ CString, [ ContextObj, CUInt]],
      'Z3_tactic_get_help': [ CString, [ ContextObj, TacticObj]],
      'Z3_tactic_get_param_descrs': [ ParamDescrs, [ ContextObj, TacticObj]],
      'Z3_tactic_get_descr': [ CString, [ ContextObj, CString]],
      'Z3_probe_get_descr': [ CString, [ ContextObj, CString]],
      'Z3_probe_apply': [ CDouble, [ ContextObj, ProbeObj, GoalObj]],
      'Z3_tactic_apply': [ ApplyResultObj, [ ContextObj, TacticObj, GoalObj]],
      'Z3_tactic_apply_ex': [ ApplyResultObj, [ ContextObj, TacticObj, GoalObj, Params]],
      'Z3_apply_result_inc_ref': [ Void, [ ContextObj, ApplyResultObj]],
      'Z3_apply_result_dec_ref': [ Void, [ ContextObj, ApplyResultObj]],
      'Z3_apply_result_to_string': [ CString, [ ContextObj, ApplyResultObj]],
      'Z3_apply_result_get_num_subgoals': [ CUInt, [ ContextObj, ApplyResultObj]],
      'Z3_apply_result_get_subgoal': [ GoalObj, [ ContextObj, ApplyResultObj, CUInt]],
      'Z3_apply_result_convert_model': [ Model, [ ContextObj, ApplyResultObj, CUInt, Model]],
      'Z3_mk_solver': [ SolverObj, [ ContextObj]],
      'Z3_mk_simple_solver': [ SolverObj, [ ContextObj]],
      'Z3_mk_solver_for_logic': [ SolverObj, [ ContextObj, Symbol]],
      'Z3_mk_solver_from_tactic': [ SolverObj, [ ContextObj, TacticObj]],
      'Z3_solver_translate': [ SolverObj, [ ContextObj, SolverObj, ContextObj]],
      'Z3_solver_get_help': [ CString, [ ContextObj, SolverObj]],
      'Z3_solver_get_param_descrs': [ ParamDescrs, [ ContextObj, SolverObj]],
      'Z3_solver_set_params': [ Void, [ ContextObj, SolverObj, Params]],
      'Z3_solver_inc_ref': [ Void, [ ContextObj, SolverObj]],
      'Z3_solver_dec_ref': [ Void, [ ContextObj, SolverObj]],
      'Z3_solver_push': [ Void, [ ContextObj, SolverObj]],
      'Z3_solver_pop': [ Void, [ ContextObj, SolverObj, CUInt]],
      'Z3_solver_reset': [ Void, [ ContextObj, SolverObj]],
      'Z3_solver_get_num_scopes': [ CUInt, [ ContextObj, SolverObj]],
      'Z3_solver_assert': [ Void, [ ContextObj, SolverObj, Ast]],
      'Z3_solver_assert_and_track': [ Void, [ ContextObj, SolverObj, Ast, Ast]],
      'Z3_solver_get_assertions': [ AstVectorObj, [ ContextObj, SolverObj]],
      'Z3_solver_check': [ CInt, [ ContextObj, SolverObj]],
      'Z3_solver_check_assumptions': [ CInt, [ ContextObj, SolverObj, CUInt, AstArray]],
      'Z3_get_implied_equalities': [ CInt, [ ContextObj, SolverObj, CUInt, AstArray, CUIntArray]],
      'Z3_solver_get_model': [ Model, [ ContextObj, SolverObj]],
      'Z3_solver_get_proof': [ Ast, [ ContextObj, SolverObj]],
      'Z3_solver_get_unsat_core': [ AstVectorObj, [ ContextObj, SolverObj]],
      'Z3_solver_get_reason_unknown': [ CString, [ ContextObj, SolverObj]],
      'Z3_solver_get_statistics': [ StatsObj, [ ContextObj, SolverObj]],
      'Z3_solver_to_string': [ CString, [ ContextObj, SolverObj]],
      'Z3_stats_to_string': [ CString, [ ContextObj, StatsObj]],
      'Z3_stats_inc_ref': [ Void, [ ContextObj, StatsObj]],
      'Z3_stats_dec_ref': [ Void, [ ContextObj, StatsObj]],
      'Z3_stats_size': [ CUInt, [ ContextObj, StatsObj]],
      'Z3_stats_get_key': [ CString, [ ContextObj, StatsObj, CUInt]],
      'Z3_stats_is_uint': [ CInt, [ ContextObj, StatsObj, CUInt]],
      'Z3_stats_is_double': [ CInt, [ ContextObj, StatsObj, CUInt]],
      'Z3_stats_get_uint_value': [ CUInt, [ ContextObj, StatsObj, CUInt]],
      'Z3_stats_get_double_value': [ CDouble, [ ContextObj, StatsObj, CUInt]],
      'Z3_mk_ast_vector': [ AstVectorObj, [ ContextObj]],
      'Z3_ast_vector_inc_ref': [ Void, [ ContextObj, AstVectorObj]],
      'Z3_ast_vector_dec_ref': [ Void, [ ContextObj, AstVectorObj]],
      'Z3_ast_vector_size': [ CUInt, [ ContextObj, AstVectorObj]],
      'Z3_ast_vector_get': [ Ast, [ ContextObj, AstVectorObj, CUInt]],
      'Z3_ast_vector_set': [ Void, [ ContextObj, AstVectorObj, CUInt, Ast]],
      'Z3_ast_vector_resize': [ Void, [ ContextObj, AstVectorObj, CUInt]],
      'Z3_ast_vector_push': [ Void, [ ContextObj, AstVectorObj, Ast]],
      'Z3_ast_vector_translate': [ AstVectorObj, [ ContextObj, AstVectorObj, ContextObj]],
      'Z3_ast_vector_to_string': [ CString, [ ContextObj, AstVectorObj]],
      'Z3_mk_ast_map': [ AstMapObj, [ ContextObj]],
      'Z3_ast_map_inc_ref': [ Void, [ ContextObj, AstMapObj]],
      'Z3_ast_map_dec_ref': [ Void, [ ContextObj, AstMapObj]],
      'Z3_ast_map_contains': [ CInt, [ ContextObj, AstMapObj, Ast]],
      'Z3_ast_map_find': [ Ast, [ ContextObj, AstMapObj, Ast]],
      'Z3_ast_map_insert': [ Void, [ ContextObj, AstMapObj, Ast, Ast]],
      'Z3_ast_map_erase': [ Void, [ ContextObj, AstMapObj, Ast]],
      'Z3_ast_map_reset': [ Void, [ ContextObj, AstMapObj]],
      'Z3_ast_map_size': [ CUInt, [ ContextObj, AstMapObj]],
      'Z3_ast_map_keys': [ AstVectorObj, [ ContextObj, AstMapObj]],
      'Z3_ast_map_to_string': [ CString, [ ContextObj, AstMapObj]],
      'Z3_algebraic_is_value': [ CInt, [ ContextObj, Ast]],
      'Z3_algebraic_is_pos': [ CInt, [ ContextObj, Ast]],
      'Z3_algebraic_is_neg': [ CInt, [ ContextObj, Ast]],
      'Z3_algebraic_is_zero': [ CInt, [ ContextObj, Ast]],
      'Z3_algebraic_sign': [ CInt, [ ContextObj, Ast]],
      'Z3_algebraic_add': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_sub': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_mul': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_div': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_root': [ Ast, [ ContextObj, Ast, CUInt]],
      'Z3_algebraic_power': [ Ast, [ ContextObj, Ast, CUInt]],
      'Z3_algebraic_lt': [ CInt, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_gt': [ CInt, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_le': [ CInt, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_ge': [ CInt, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_eq': [ CInt, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_neq': [ CInt, [ ContextObj, Ast, Ast]],
      'Z3_algebraic_roots': [ AstVectorObj, [ ContextObj, Ast, CUInt, AstArray]],
      'Z3_algebraic_eval': [ CInt, [ ContextObj, Ast, CUInt, AstArray]],
      'Z3_polynomial_subresultants': [ AstVectorObj, [ ContextObj, Ast, Ast, Ast]],
      'Z3_rcf_del': [ Void, [ ContextObj, RCFNumObj]],
      'Z3_rcf_mk_rational': [ RCFNumObj, [ ContextObj, CString]],
      'Z3_rcf_mk_small_int': [ RCFNumObj, [ ContextObj, CInt]],
      'Z3_rcf_mk_pi': [ RCFNumObj, [ ContextObj]],
      'Z3_rcf_mk_e': [ RCFNumObj, [ ContextObj]],
      'Z3_rcf_mk_infinitesimal': [ RCFNumObj, [ ContextObj]],
      'Z3_rcf_mk_roots': [ CUInt, [ ContextObj, CUInt, RCFNumObjArray, RCFNumObjArray]],
      'Z3_rcf_add': [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_sub': [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_mul': [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_div': [ RCFNumObj, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_neg': [ RCFNumObj, [ ContextObj, RCFNumObj]],
      'Z3_rcf_inv': [ RCFNumObj, [ ContextObj, RCFNumObj]],
      'Z3_rcf_power': [ RCFNumObj, [ ContextObj, RCFNumObj, CUInt]],
      'Z3_rcf_lt': [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_gt': [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_le': [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_ge': [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_eq': [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_neq': [ CInt, [ ContextObj, RCFNumObj, RCFNumObj]],
      'Z3_rcf_num_to_string': [ CString, [ ContextObj, RCFNumObj, CInt, CInt]],
      'Z3_rcf_num_to_decimal_string': [ CString, [ ContextObj, RCFNumObj, CUInt]],
      'Z3_rcf_get_numerator_denominator': [ Void, [ ContextObj, RCFNumObj, ref.refType(RCFNumObj), ref.refType(RCFNumObj)]],
      'Z3_mk_fixedpoint': [ FixedpointObj, [ ContextObj]],
      'Z3_fixedpoint_inc_ref': [ Void, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_dec_ref': [ Void, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_add_rule': [ Void, [ ContextObj, FixedpointObj, Ast, Symbol]],
      'Z3_fixedpoint_add_fact': [ Void, [ ContextObj, FixedpointObj, FuncDecl, CUInt, CUIntArray]],
      'Z3_fixedpoint_assert': [ Void, [ ContextObj, FixedpointObj, Ast]],
      'Z3_fixedpoint_query': [ CInt, [ ContextObj, FixedpointObj, Ast]],
      'Z3_fixedpoint_query_relations': [ CInt, [ ContextObj, FixedpointObj, CUInt, FuncDeclArray]],
      'Z3_fixedpoint_get_answer': [ Ast, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_get_reason_unknown': [ CString, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_update_rule': [ Void, [ ContextObj, FixedpointObj, Ast, Symbol]],
      'Z3_fixedpoint_get_num_levels': [ CUInt, [ ContextObj, FixedpointObj, FuncDecl]],
      'Z3_fixedpoint_get_cover_delta': [ Ast, [ ContextObj, FixedpointObj, CInt, FuncDecl]],
      'Z3_fixedpoint_add_cover': [ Void, [ ContextObj, FixedpointObj, CInt, FuncDecl, Ast]],
      'Z3_fixedpoint_get_statistics': [ StatsObj, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_register_relation': [ Void, [ ContextObj, FixedpointObj, FuncDecl]],
      'Z3_fixedpoint_set_predicate_representation': [ Void, [ ContextObj, FixedpointObj, FuncDecl, CUInt, SymbolArray]],
      'Z3_fixedpoint_get_rules': [ AstVectorObj, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_get_assertions': [ AstVectorObj, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_set_params': [ Void, [ ContextObj, FixedpointObj, Params]],
      'Z3_fixedpoint_get_help': [ CString, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_get_param_descrs': [ ParamDescrs, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_to_string': [ CString, [ ContextObj, FixedpointObj, CUInt, AstArray]],
      'Z3_fixedpoint_from_string': [ AstVectorObj, [ ContextObj, FixedpointObj, CString]],
      'Z3_fixedpoint_from_file': [ AstVectorObj, [ ContextObj, FixedpointObj, CString]],
      'Z3_fixedpoint_push': [ Void, [ ContextObj, FixedpointObj]],
      'Z3_fixedpoint_pop': [ Void, [ ContextObj, FixedpointObj]],
      'Z3_mk_optimize': [ OptimizeObj, [ ContextObj]],
      'Z3_optimize_inc_ref': [ Void, [ ContextObj, OptimizeObj]],
      'Z3_optimize_dec_ref': [ Void, [ ContextObj, OptimizeObj]],
      'Z3_optimize_assert': [ Void, [ ContextObj, OptimizeObj, Ast]],
      'Z3_optimize_assert_soft': [ CUInt, [ ContextObj, OptimizeObj, Ast, CString, Symbol]],
      'Z3_optimize_maximize': [ CUInt, [ ContextObj, OptimizeObj, Ast]],
      'Z3_optimize_minimize': [ CUInt, [ ContextObj, OptimizeObj, Ast]],
      'Z3_optimize_push': [ Void, [ ContextObj, OptimizeObj]],
      'Z3_optimize_pop': [ Void, [ ContextObj, OptimizeObj]],
      'Z3_optimize_check': [ CInt, [ ContextObj, OptimizeObj]],
      'Z3_optimize_get_reason_unknown': [ CString, [ ContextObj, OptimizeObj]],
      'Z3_optimize_get_model': [ Model, [ ContextObj, OptimizeObj]],
      'Z3_optimize_set_params': [ Void, [ ContextObj, OptimizeObj, Params]],
      'Z3_optimize_get_param_descrs': [ ParamDescrs, [ ContextObj, OptimizeObj]],
      'Z3_optimize_get_lower': [ Ast, [ ContextObj, OptimizeObj, CUInt]],
      'Z3_optimize_get_upper': [ Ast, [ ContextObj, OptimizeObj, CUInt]],
      'Z3_optimize_to_string': [ CString, [ ContextObj, OptimizeObj]],
      'Z3_optimize_get_help': [ CString, [ ContextObj, OptimizeObj]],
      'Z3_optimize_get_statistics': [ StatsObj, [ ContextObj, OptimizeObj]],
      'Z3_mk_interpolant': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_interpolation_context': [ ContextObj, [ Config]],
      'Z3_get_interpolant': [ AstVectorObj, [ ContextObj, Ast, Ast, Params]],
      'Z3_compute_interpolant': [ CInt, [ ContextObj, Ast, Params, ref.refType(AstVectorObj), ref.refType(Model)]],
      'Z3_interpolation_profile': [ CString, [ ContextObj]],
      'Z3_read_interpolation_problem': [ CInt, [ ContextObj, ref.refType(CUInt), Ast, CUInt, CString, ref.refType(CString), ref.refType(CUInt), Ast]],
      'Z3_check_interpolant': [ CInt, [ ContextObj, CUInt, AstArray, CUIntArray, AstArray, ref.refType(CString), CUInt, AstArray]],
      'Z3_write_interpolation_problem': [ Void, [ ContextObj, CUInt, AstArray, CUIntArray, CString, CUInt, AstArray]],
      'Z3_mk_fpa_rounding_mode_sort': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_round_nearest_ties_to_even': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_rne': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_round_nearest_ties_to_away': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_rna': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_round_toward_positive': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_rtp': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_round_toward_negative': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_rtn': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_round_toward_zero': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_rtz': [ Ast, [ ContextObj]],
      'Z3_mk_fpa_sort': [ Sort, [ ContextObj, CUInt, CUInt]],
      'Z3_mk_fpa_sort_half': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_sort_16': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_sort_single': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_sort_32': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_sort_double': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_sort_64': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_sort_quadruple': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_sort_128': [ Sort, [ ContextObj]],
      'Z3_mk_fpa_nan': [ Ast, [ ContextObj, Sort]],
      'Z3_mk_fpa_inf': [ Ast, [ ContextObj, Sort, CInt]],
      'Z3_mk_fpa_zero': [ Ast, [ ContextObj, Sort, CInt]],
      'Z3_mk_fpa_fp': [ Ast, [ ContextObj, Ast, Ast, Ast]],
      'Z3_mk_fpa_numeral_float': [ Ast, [ ContextObj, CFloat, Sort]],
      'Z3_mk_fpa_numeral_double': [ Ast, [ ContextObj, CDouble, Sort]],
      'Z3_mk_fpa_numeral_int': [ Ast, [ ContextObj, CInt, Sort]],
      'Z3_mk_fpa_numeral_int_uint': [ Ast, [ ContextObj, CInt, CInt, CUInt, Sort]],
      'Z3_mk_fpa_numeral_int64_uint64': [ Ast, [ ContextObj, CInt, CLong, CULong, Sort]],
      'Z3_mk_fpa_abs': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_neg': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_add': [ Ast, [ ContextObj, Ast, Ast, Ast]],
      'Z3_mk_fpa_sub': [ Ast, [ ContextObj, Ast, Ast, Ast]],
      'Z3_mk_fpa_mul': [ Ast, [ ContextObj, Ast, Ast, Ast]],
      'Z3_mk_fpa_div': [ Ast, [ ContextObj, Ast, Ast, Ast]],
      'Z3_mk_fpa_fma': [ Ast, [ ContextObj, Ast, Ast, Ast, Ast]],
      'Z3_mk_fpa_sqrt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_rem': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_round_to_integral': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_min': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_max': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_leq': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_lt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_geq': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_gt': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_eq': [ Ast, [ ContextObj, Ast, Ast]],
      'Z3_mk_fpa_is_normal': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_is_subnormal': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_is_zero': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_is_infinite': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_is_nan': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_is_negative': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_is_positive': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_to_fp_bv': [ Ast, [ ContextObj, Ast, Sort]],
      'Z3_mk_fpa_to_fp_float': [ Ast, [ ContextObj, Ast, Ast, Sort]],
      'Z3_mk_fpa_to_fp_real': [ Ast, [ ContextObj, Ast, Ast, Sort]],
      'Z3_mk_fpa_to_fp_signed': [ Ast, [ ContextObj, Ast, Ast, Sort]],
      'Z3_mk_fpa_to_fp_unsigned': [ Ast, [ ContextObj, Ast, Ast, Sort]],
      'Z3_mk_fpa_to_ubv': [ Ast, [ ContextObj, Ast, Ast, CUInt]],
      'Z3_mk_fpa_to_sbv': [ Ast, [ ContextObj, Ast, Ast, CUInt]],
      'Z3_mk_fpa_to_real': [ Ast, [ ContextObj, Ast]],
      'Z3_fpa_get_ebits': [ CUInt, [ ContextObj, Sort]],
      'Z3_fpa_get_sbits': [ CUInt, [ ContextObj, Sort]],
      'Z3_fpa_get_numeral_sign': [ CInt, [ ContextObj, Ast, ref.refType(CInt)]],
      'Z3_fpa_get_numeral_significand_string': [ CString, [ ContextObj, Ast]],
      'Z3_fpa_get_numeral_significand_uint64': [ CInt, [ ContextObj, Ast, ref.refType(CULong)]],
      'Z3_fpa_get_numeral_exponent_string': [ CString, [ ContextObj, Ast]],
      'Z3_fpa_get_numeral_exponent_int64': [ CInt, [ ContextObj, Ast, ref.refType(CLong)]],
      'Z3_mk_fpa_to_ieee_bv': [ Ast, [ ContextObj, Ast]],
      'Z3_mk_fpa_to_fp_int_real': [ Ast, [ ContextObj, Ast, Ast, Ast, Sort]],
